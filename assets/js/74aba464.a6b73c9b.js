"use strict";(self.webpackChunkls_docs_web=self.webpackChunkls_docs_web||[]).push([[3954],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var i=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,l=function(e,n){if(null==e)return{};var t,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=i.createContext({}),_=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=_(e.components);return i.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},c=i.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=_(t),d=l,m=c["".concat(s,".").concat(d)]||c[d]||p[d]||a;return t?i.createElement(m,r(r({ref:n},u),{},{components:t})):i.createElement(m,r({ref:n},u))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,r=new Array(a);r[0]=c;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var _=2;_<a;_++)r[_]=t[_];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},24205:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=t(87462),l=(t(67294),t(3905));const a={sidebar_label:"\u4f7f\u7528\u65b9\u6cd5",sidebar_position:3},r="\u4f7f\u7528\u65b9\u6cd5",o={unversionedId:"AIEcology/Linger/Introduction/how_to_use",id:"AIEcology/Linger/Introduction/how_to_use",isDocsHomePage:!1,title:"\u4f7f\u7528\u65b9\u6cd5",description:"1. \u73af\u5883\u914d\u7f6e",source:"@site/docs/AIEcology/Linger/Introduction/how_to_use.md",sourceDirName:"AIEcology/Linger/Introduction",slug:"/AIEcology/Linger/Introduction/how_to_use",permalink:"/docs-csk6/AIEcology/Linger/Introduction/how_to_use",version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"\u4f7f\u7528\u65b9\u6cd5",sidebar_position:3},sidebar:"AIEcologyLinger",previous:{title:"\u5feb\u901f\u5f00\u59cb",permalink:"/docs-csk6/AIEcology/Linger/Introduction/quick_start"},next:{title:"\u7f16\u8bd1\u65b9\u6cd5",permalink:"/docs-csk6/AIEcology/Linger/Training_Framework/compile"}},s=[{value:"1. \u73af\u5883\u914d\u7f6e",id:"1-\u73af\u5883\u914d\u7f6e",children:[]},{value:"1.1 \u901a\u8fc7\u6e90\u7801\u76f4\u63a5\u5b89\u88c5",id:"11-\u901a\u8fc7\u6e90\u7801\u76f4\u63a5\u5b89\u88c5",children:[{value:"1.1.1 x86-linux\u5e73\u53f0",id:"111-x86-linux\u5e73\u53f0",children:[]},{value:"1.1.x \u5176\u4ed6\u5e73\u53f0",id:"11x-\u5176\u4ed6\u5e73\u53f0",children:[]}]},{value:"1.2 \u9a8c\u8bc1\u5b89\u88c5",id:"12-\u9a8c\u8bc1\u5b89\u88c5",children:[]},{value:"1.3 \u901a\u8fc7pip\u5b89\u88c5",id:"13-\u901a\u8fc7pip\u5b89\u88c5",children:[]},{value:"1.4 \u901a\u8fc7docker\u8fdb\u884c\u5b89\u88c5",id:"14-\u901a\u8fc7docker\u8fdb\u884c\u5b89\u88c5",children:[]},{value:"2 \u63a5\u53e3\u4f7f\u7528\u8bf4\u660e",id:"2-\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e",children:[]},{value:"2.1  \u57fa\u7840\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e",id:"21--\u57fa\u7840\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e",children:[{value:"2.1.1 init\u63a5\u53e3",id:"211-init\u63a5\u53e3",children:[]},{value:"2.1.2 disable_qunat\u63a5\u53e3",id:"212-disable_qunat\u63a5\u53e3",children:[]},{value:"2.1.3 quant_module\u63a5\u53e3",id:"213-quant_module\u63a5\u53e3",children:[]},{value:"2.1.4 \u81ea\u52a8\u878d\u5408BN\u63a5\u53e3",id:"214-\u81ea\u52a8\u878d\u5408bn\u63a5\u53e3",children:[]},{value:"2.1.5 \u53c2\u6570\u52a0\u8f7d\u63a5\u53e3",id:"215-\u53c2\u6570\u52a0\u8f7d\u63a5\u53e3",children:[]},{value:"1.6 \u67e5\u8868\u91cf\u5316\u8bad\u7ec3\u63a5\u53e3",id:"16-\u67e5\u8868\u91cf\u5316\u8bad\u7ec3\u63a5\u53e3",children:[]}]},{value:"3. \u8fdb\u9636\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e",id:"3-\u8fdb\u9636\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e",children:[]},{value:"4 \u7b97\u5b50\u66ff\u6362",id:"4-\u7b97\u5b50\u66ff\u6362",children:[{value:"4.1 LSTMP",id:"41-lstmp",children:[]},{value:"4.2 NoralizeFastLSTMP",id:"42-noralizefastlstmp",children:[]},{value:"4.3 FastURLSTMP",id:"43-fasturlstmp",children:[]}]}],_={toc:s};function u(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,i.Z)({},_,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u4f7f\u7528\u65b9\u6cd5"},"\u4f7f\u7528\u65b9\u6cd5"),(0,l.kt)("h2",{id:"1-\u73af\u5883\u914d\u7f6e"},"1. \u73af\u5883\u914d\u7f6e"),(0,l.kt)("h2",{id:"11-\u901a\u8fc7\u6e90\u7801\u76f4\u63a5\u5b89\u88c5"},"1.1 \u901a\u8fc7\u6e90\u7801\u76f4\u63a5\u5b89\u88c5"),(0,l.kt)("h3",{id:"111-x86-linux\u5e73\u53f0"},"1.1.1 x86-linux\u5e73\u53f0"),(0,l.kt)("p",null,"\u63a8\u8350\u4f7f\u7528conda\u521b\u5efa\u65b0\u73af\u5883\uff0c\u5e76\u4f7f\u7528\u5982\u4e0b\u7248\u672c\u7684python\u4f9d\u8d56\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"python 3.7.0"),(0,l.kt)("li",{parentName:"ul"},"torch: 1.9.0"),(0,l.kt)("li",{parentName:"ul"},"torchvision: 0.10.0"),(0,l.kt)("li",{parentName:"ul"},"onnx: 1.7.0"),(0,l.kt)("li",{parentName:"ul"},"protobuf: 3.8.0")),(0,l.kt)("p",null,"\u4e00\u952e\u5b89\u88c5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://git-in.iflytek.com/RS_RDG_AI_Group/bitbrain/linger.git\ncd linger\nsh install.sh\n")),(0,l.kt)("h3",{id:"11x-\u5176\u4ed6\u5e73\u53f0"},"1.1.x \u5176\u4ed6\u5e73\u53f0"),(0,l.kt)("p",null,"\u5373\u5c06\u63a8\u51fa"),(0,l.kt)("h2",{id:"12-\u9a8c\u8bc1\u5b89\u88c5"},"1.2 \u9a8c\u8bc1\u5b89\u88c5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'Python 3.7.3 (default, Jul 8 2020, 22:11:17)\n[GCC 7.3.0] :: Anaconda, Inc. on linux\nType "help", "copyright", "credits" or "license" for more information.\n>>> import linger\n>>> \n')),(0,l.kt)("h2",{id:"13-\u901a\u8fc7pip\u5b89\u88c5"},"1.3 \u901a\u8fc7pip\u5b89\u88c5"),(0,l.kt)("h2",{id:"14-\u901a\u8fc7docker\u8fdb\u884c\u5b89\u88c5"},"1.4 \u901a\u8fc7docker\u8fdb\u884c\u5b89\u88c5"),(0,l.kt)("h2",{id:"2-\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e"},"2 \u63a5\u53e3\u4f7f\u7528\u8bf4\u660e"),(0,l.kt)("h2",{id:"21--\u57fa\u7840\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e"},"2.1  \u57fa\u7840\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e"),(0,l.kt)("h3",{id:"211-init\u63a5\u53e3"},"2.1.1 init\u63a5\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"replace_modules = (nn.Conv2d, nn.ConvTranspose2d, nn.Linear)\nnet = linger.init(net, quant_modules=replace_modules, mode=linger.QuantMode.MaxValue, \n        data_bits=8, parameter_bits=8, out_bits=8, )\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8be5\u63a5\u53e3\u5c06\u539f\u59cb\u7684\u6d6e\u70b9\u7f51\u7edc\u8fdb\u884cmodule\u7ea7\u522b\u7684\u66ff\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\uff0c\u53ef\u4ee5\u5728\u66ff\u6362\u5b8c\u6210\u4e4b\u540e\u6253\u5370\u7f51\u7edc\u8fdb\u884c\u89c2\u5bdf\u5dee\u522b"),(0,l.kt)("li",{parentName:"ul"},"quant_modules\u6307\u660e\u9700\u8981\u91cf\u5316\u7684module\u7c7b\u578b\uff0c\u4e0a\u8ff0\u793a\u4f8b\u8868\u660e\u91cf\u5316\u4e09\u79cdOP\u7c7b\u578b\uff0c\u5176\u4f59OP\u7c7b\u578b\u4e0d\u505a\u91cf\u5316"),(0,l.kt)("li",{parentName:"ul"},"mode\u53c2\u6570\u6307\u660e\u91c7\u7528\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5305\u542bMaxValue\u4e0eQValue\u4e24\u79cd\u65b9\u5f0f\uff0cMax\u65b9\u5f0f\u8868\u793a\u91c7\u7528\u6700\u503c\u8fdb\u884c\u91cf\u5316\uff0cQ\u503c\u5219\u91c7\u75282\u7684\u5e42\u6b21\u8fdb\u884c\u91cf\u5316"),(0,l.kt)("li",{parentName:"ul"},"data_bits: \u6307\u660e\u8f93\u5165\u91c7\u7528\u7684\u91cf\u5316bit\u6570\uff0c parameter_bits\uff1a\u6307\u660eweight\u91c7\u7528\u7684\u91cf\u5316bit\u6570"),(0,l.kt)("li",{parentName:"ul"},"out_bits:\u8f93\u51fa\u91cf\u5316\u7684bit\u6570\uff0c\u9488\u5bf9op\u8f93\u51fa\u8fdb\u884c\u91cf\u5316\uff0c\u9ed8\u8ba4\u53c2\u6570\u4e3aNone\uff0c\u8868\u660e\u6240\u6709OP\u91c7\u7528float32\u8f93\u51fa\u7684\u6df7\u5408\u7cbe\u5ea6\u65b9\u5f0f\uff0co_bits=8\u8868\u660e\u8f93\u51fa\u4e3aint8")),(0,l.kt)("h3",{id:"212-disable_qunat\u63a5\u53e3"},"2.1.2 disable_qunat\u63a5\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"linger.disable_quant(net.last_fc)\nnet = linger.init(net, ...)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8be5\u63a5\u53e3\u6307\u5b9a\u67d0\u4e9b\u5c42\u4e0d\u505a\u91cf\u5316\u64cd\u4f5c\uff0c\u901a\u8fc7\u76f8\u5e94\u5c42\u7684module\u8bbe\u7f6e\u5373\u53ef\uff0c\u8be5\u63a5\u53e3\u9700\u8981\u5728init\u4e4b\u524d\u4f7f\u7528\uff0c\u6ca1\u6709disable\u7684\u5176\u4ed6\u5c42\u4f1a\u91c7\u7528init\u7684\u65b9\u5f0f\u8fdb\u884c\u91cf\u5316"),(0,l.kt)("li",{parentName:"ul"},"\u8be5\u63a5\u53e3\u4e3b\u8981\u7528\u4e8e\u7f51\u7edc\u6700\u540e\u4e0eloss\u76f8\u5173\u7684\u5c42\uff0c\u8be5\u5c42\u4e0d\u5e94\u8be5\u505aint8\u7684\u91cf\u5316\u64cd\u4f5c\uff0c\u5426\u5219\u4f1a\u589e\u5927\u6574\u4f53\u7684\u8bad\u7ec3\u635f\u5931,\u5efa\u8bae\u4e00\u822c\u7f51\u7edc\u6700\u540e\u4e00\u5c42\u90fd\u91c7\u7528disable\u907f\u514d\u91cf\u5316\u635f\u5931\u8f83\u5927")),(0,l.kt)("h3",{id:"213-quant_module\u63a5\u53e3"},"2.1.3 quant_module\u63a5\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"linger.quant_module(net.last_fc, data_bits=16, parameter_bits=16, out_bits=32)\nnet = linger.init(net, ...)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8be5\u63a5\u53e3\u6307\u5b9a\u67d0\u4e9b\u5c42\u91c7\u7528\u7279\u5b9abit\u4f4d\u7684\u91cf\u5316\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528init\u4e2d\u7684\u5168\u5c40\u914d\u7f6e\u53c2\u6570\uff0c\u8be5\u63a5\u53e3\u9700\u8981\u5728init\u4e4b\u524d\u8c03\u7528\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff0c\u67d0\u4e9b\u5e73\u53f0\u7684\u786c\u4ef6\u53ef\u80fd\u4f1a\u4e0d\u652f\u6301data_bits\u548cout_bits\u975e8\u7684\u91cf\u5316\u7b56\u7565\u5982NPU\u4ee5\u53caCastor\u5e73\u53f0\u7b49")),(0,l.kt)("h3",{id:"214-\u81ea\u52a8\u878d\u5408bn\u63a5\u53e3"},"2.1.4 \u81ea\u52a8\u878d\u5408BN\u63a5\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"linger.trace_layers(root_model=net, target_model=net.sub_module, (x,y), fuse_bn=True, ahead_conv_relu=True,ahead_bn_relu=True,ahead_linear_relu=True)\nnet = linger.init(net, ***)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8be5\u63a5\u53e3\u4e3b\u8981\u7528\u4e8e\u91cf\u5316\u8bad\u7ec3\u8fc7\u7a0b\u6d88\u9664BN\u7ed3\u6784\uff0c\u52a0\u901f\u63a8\u7406\u8fc7\u7a0b\uff0c\u540c\u65f6\u7edf\u8ba1\u76f8\u5173OP+ReLU\u7684\u8282\u70b9\uff0c\u91cf\u5316\u7edf\u8ba1scale\u8fc7\u7a0b\u91c7\u7528\u6b63\u503c\u64cd\u4f5c"),(0,l.kt)("li",{parentName:"ul"},"root_model\u8868\u793a\u539f\u59cb\u7684model\uff0ctarget_model\u4e3a\u9700\u8981\u878d\u5408BN\u7684\u5b50model\uff0c(x, y)\u4e3a\u5b50model\u7684\u8f93\u5165\uff0c\u591a\u4e2a\u8f93\u5165\u7684\u60c5\u51b5\u4e0b\u91c7\u7528\u5143\u7ec4\u5305\u62ec"),(0,l.kt)("li",{parentName:"ul"},"fuse_bn\u8868\u793a\u662f\u5426\u9700\u8981\u878d\u5408BN\uff0cFalse\u8868\u793a\u4e0d\u878d\u5408\uff0cTrue\u8868\u793a\u878d\u5408\u64cd\u4f5c, ahead_conv_relu\u8868\u660e\u662f\u5426\u9488\u5bf9conv-relu\u7ed3\u6784\u7edf\u8ba1conv\u7684scale_o\u91c7\u7528\u6b63\u503c\u65b9\u5411\uff0c\u5176\u4f59\u53c2\u6570\u914d\u7f6e\u542b\u4e49\u4e00\u81f4"),(0,l.kt)("li",{parentName:"ul"},"\u8be5\u63a5\u53e3\u9700\u8981\u5728init\u4e4b\u524d\u8c03\u7528\uff0c\u540c\u65f6\u53ea\u80fd\u6267\u884c\u4e00\u6b21\uff0c\u76ee\u524d\u4e0d\u5141\u8bb8\u7f51\u7edctrace\u591a\u4e2a\u90e8\u5206,\u5efa\u8bae\u653e\u5728\u6240\u6709\u914d\u7f6e\u64cd\u4f5c\u7684\u6700\u524d\u9762")),(0,l.kt)("h3",{id:"215-\u53c2\u6570\u52a0\u8f7d\u63a5\u53e3"},"2.1.5 \u53c2\u6570\u52a0\u8f7d\u63a5\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# inline\u64cd\u4f5c\nnet = linger.init(net, ...)\nnet.load_state_dict(torch.load('**.pt'))\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53c2\u6570\u52a0\u8f7d\u7684\u65b9\u5f0f\u4e0e\u6807\u51c6\u7684\u6d6e\u70b9\u52a0\u8f7d\u4e00\u81f4\uff0cload_state_dict\u8c03\u7528\u9700\u8981\u5728init\u4e4b\u540e\u8c03\u7528\uff0c\u4e0d\u652f\u6301\u76f4\u63a5\u8bbf\u95eenet.state_dict()\u8fdb\u884c\u53c2\u6570\u5339\u914d\u64cd\u4f5c\uff0c\u5982\u6709\u9700\u6c42\uff0c\u5efa\u8bae\u76f4\u63a5\u5728\u5916\u9762\u9488\u5bf9\u53c2\u6570\u540d\u79f0\u8fdb\u884c\u4fee\u6539,\u4e4b\u540e\u8c03\u7528\u6807\u51c6\u7684load_state_dict\u63a5\u53e3\u64cd\u4f5c")),(0,l.kt)("h3",{id:"16-\u67e5\u8868\u91cf\u5316\u8bad\u7ec3\u63a5\u53e3"},"1.6 \u67e5\u8868\u91cf\u5316\u8bad\u7ec3\u63a5\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"net = net.init(net, ***)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53c2\u6570\u4e3b\u8981\u7528\u4e8e\u914d\u7f6elstmint\uff0c gruint\u7b49\u65f6\u5e8f\u7f51\u7edc\u4e2d\u7684sigmoid, tanh\u7b49\u51fd\u6570\u7684\u67e5\u8868\u64cd\u4f5c")),(0,l.kt)("h2",{id:"3-\u8fdb\u9636\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e"},"3. \u8fdb\u9636\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u4e00\u822c\u60c5\u51b5\u4e0b\u57fa\u7840\u63a5\u53e3\u80fd\u89e3\u51b3\u5927\u90e8\u5206\u95ee\u9898\uff0c\u4e5f\u662f\u6211\u4eec\u5e38\u7528\u7684\uff0c\u8fdb\u9636\u63a5\u53e3\u662f\u5728\u6548\u679c\u5b58\u5728\u635f\u5931\u65f6\u624d\u4f1a\u7528\u5230\u7684")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u76f4\u63a5\u91cf\u5316\u5177\u6709\u8f83\u5927\u635f\u5931\uff0c\u53ef\u80fd\u6570\u636e\u5206\u5e03\u5b58\u5728\u5947\u5f02\u503c\u7684\u95ee\u9898\uff0c\u901a\u8fc7\u5728\u91cf\u5316\u8bad\u7ec3\u4e2d\u6dfb\u52a0normalize\u529f\u80fd\u7ea6\u675f\u6574\u4f53\u7684\u6570\u636e\u5206\u5e03\uff0c\u7edf\u8ba1\u622a\u65ad\u4e4b\u540e\u7684scale,\u907f\u514d\u5947\u5f02\u503c\u7684\u5f71\u54cd")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"normalize_layers \u52a8\u6001\u8bbe\u7f6e\u7279\u5b9a\u5c42\u4e0d\u540c\u7684normalize \u7b56\u7565,\u76ee\u524d\u53ea\u9488\u5bf9Conv2(1)d, Linear, ConvTranspose2d\u6709\u6548\uff0c\u65f6\u8bb8\u6a21\u578b\u4e0d\u652f\u6301"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"linger.trace_layers(net, net.trace_module, (x, y), fuse_bn=True)\nlinger.disable_normalize(net.last_fc)\nnormalize_modules = (nn.Conv2d,nn.Linear)\nlinger.normalize_module(net.mid_conv, normalize_weight_value=16, normalize_bias_value=16, normalize_output_value=16)\nnet = linger.normalize_layers(net, normalize_modules = normalize_modules, normalize_weight_value=8, normalize_bias_value=8, normalize_output_value=8) #normalize_dynamic_percent\u53c2\u6570\u76ee\u524d\u53ea\u63a8\u8350\u8c03\u8bd5\u5b9a\u4f4d\u5f02\u5e38\u5c42\u65f6\u4f7f\u7528\uff0c\u4e0d\u63a8\u8350\u5b9e\u9645\u8bad\u7ec3\u65f6\u4f7f\u7528\nlinger.disable_quant(net.last_fc)\nquant_modules = (nn.Conv2d, nn.Linear)\nnet = linger.init(net, quant_modules = quant_modules, ...)\n//load_state_dict\u64cd\u4f5c\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7normalize_layers\u914d\u7f6e\u5168\u5c40\u7684normalize\u6570\u503c\uff0cdisable_normalize\u7528\u4e8e\u8bbe\u7f6e\u67d0\u4e00\u5c42\u4e0d\u505anormalize\u64cd\u4f5c\uff0c"),(0,l.kt)("li",{parentName:"ul"},"normalize_module\u7528\u4e8e\u914d\u7f6e\u67d0\u4e00\u5c42\u91c7\u7528\u7279\u5b9a\u7684normalize\u6570\u503c\u8fdb\u884c\u7ea6\u675f"),(0,l.kt)("li",{parentName:"ul"},"init\u4e4b\u540e\u4f1a\u5c06normalize\u4e4b\u540e\u7684\u7f51\u7edc\u7684normalize\u6570\u503c\u4ee3\u5165\u91cf\u5316OP\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u52a8\u6001\u914d\u7f6e\u76f8\u5173normalize\u6570\u503c\u7684\u529f\u80fd")),(0,l.kt)("h2",{id:"4-\u7b97\u5b50\u66ff\u6362"},"4 \u7b97\u5b50\u66ff\u6362"),(0,l.kt)("h3",{id:"41-lstmp"},"4.1 LSTMP"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"linger\u4e2d\u5b9e\u73b0LSTMP\u3001UBLSTMP\u4e0easr-extension\u5c01\u88c5\u7684lstmp\u6709\u4e0d\u540c\u95e8\u7684\u987a\u5e8f\u4e5f\u4e0d\u540c"),(0,l.kt)("li",{parentName:"ul"},"\u6ce8\u610fpytorch-asr-extension\u5e93\u4e2d\u7684LSTMP\u4e3a( input_dim, cell_num, hidden_size ) \u672c\u5b9e\u73b0\u4e3a\uff08input_size, hidden_size, cell_size )  \u6ce8\u610f\u4ea4\u6362\u4f4d\u7f6e"),(0,l.kt)("li",{parentName:"ul"},"\u9996\u5148\u672c\u5b9e\u73b0\u4e2dlstmp\u53ea\u652f\u6301batch_first  \u800c\u4e14\u53ea\u4e0easr\u4e2dlstmp\u5c01\u88c5\u7684c++ \u4ee3\u7801\u4fdd\u6301\u4e00\u81f4\u591a\u4f59\u7684clip_mask\u7b49\u64cd\u4f5c  \u9700\u8981\u663e\u5f0f\u4fdd\u7559\u5199\u51fa\u6765  "),(0,l.kt)("li",{parentName:"ul"},"\u82e5\u8f93\u5165\u4e3a T",(0,l.kt)("em",{parentName:"li"},"B"),"D  \u5219\u5e94 transpose \u540e \u518d\u8fdb\u672c\u5b9e\u73b0\u7684lstmp  \u8f93\u51fa\u540c\u6837  "),(0,l.kt)("li",{parentName:"ul"},"\u8fd8\u6709\u5982\u679clstmp\u8f93\u5165\u6709initial_state, \u5219 \u5e94\u5f53\u4e3a (1, batch_size, hidden_size) \u548c (1, batch_size, cell_size)  \uff08\u82e5batchsize\u4e0d\u4e3a1\uff0c\u4e5f\u53ef\u76f4\u63a5\u4f20\uff08batch_size, hidden_size) \u548c (batch_size, cell_size)\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u53c2\u7167\u4e0b\u65b9  \u4fee\u6539checkpoint\u7684\u95e8\u7684\u987a\u5e8f, \u53bb\u6389\u6700\u540e\u56db\u4e2afc\u7684key\u4fee\u6539\u5373\u53ef  ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"\ncheckpoint = torch.load(\"state_dict.pt\")  #original checkpoint\n\nmodel_dict = {}\nfor k,v in checkpoint.items():\n    if 'weight_x' in k:\n        new_key = k.replace('weight_x', 'input_linearity.weight')\n        v_chunk = v.chunk(4, 0)\n        v = torch.cat([v_chunk[0], v_chunk[1], v_chunk[3], v_chunk[2]], dim=0)\n    elif 'weight_bias' in k:\n        new_key = k.replace('weight_bias', 'input_linearity.bias')\n        v_chunk = v.chunk(4, 1)\n        v = torch.cat([v_chunk[0], v_chunk[1], v_chunk[3], v_chunk[2]], dim=1)\n    elif 'weight_r' in k:\n        new_key = k.replace('weight_r', 'state_linearity.weight')\n        v_chunk = v.chunk(4, 0)\n        v = torch.cat([v_chunk[0], v_chunk[1], v_chunk[3], v_chunk[2]], dim=0)\n    elif 'weight_p' in k:\n        new_key = k.replace('weight_p', 'state_projection.weight')\n    else:\n        new_key = k\n    # print('new_key: ', new_key)\n    if 'weight_bias' in k:\n        model_dict[new_key] = v.data.reshape(-1)\n    else:\n        model_dict[new_key] = v.data\n\nnet.load_state_dict(model_dict)  ##load replaced checkpoint\n\n")),(0,l.kt)("h3",{id:"42-noralizefastlstmp"},"4.2 NoralizeFastLSTMP"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u672c\u5b9e\u73b0\u4e2dNormalizeFastLSTMP \u76f4\u63a5\u79fb\u690d\u4e86torch\u7684nn.LSTM\u5b9e\u73b0\u8fc7\u6765\u4e0easr-extension\u5c01\u88c5\u7684lstmp\u6709\u4e0d\u540c\u95e8\u7684\u987a\u5e8f\u4e5f\u4e0d\u540c"),(0,l.kt)("li",{parentName:"ul"},"\u6ce8\u610fpytorch-asr-extension\u5e93\u4e2d\u7684LSTMP\u4e3a( input_dim, cell_num, hidden_size )    intx\u4e2d\u7684\u666e\u901aLSTMP\u4e3a\uff08input_size, hidden_size, cell_size )  \u6ce8\u610f\u4ea4\u6362\u4f4d\u7f6e"),(0,l.kt)("li",{parentName:"ul"},"\u800c NormalizeFastLSTMP \u7ee7\u627f\u7684torch\u7684nn.LSTM\u5b9e\u73b0\u4e2d\u4e3a( input_dim, hidden_size, proj_size )"),(0,l.kt)("li",{parentName:"ul"},"nn.LSTM\u5728torch1.9\u53ca\u4e4b\u540e\u591a\u4e86\u4e00\u4e2aproj_size\u7684\u53c2\u6570(\u4ee5\u4e0b\u7edf\u79f0nn.LSTMP)\uff0c\u9ed8\u8ba4\u4e3a0\uff0c\u5373\u4e3a\u539f\u59cb\u7684lstm\uff0c>0\u5373\u5bf9\u5e94LSTMP\u5b9e\u73b0"),(0,l.kt)("li",{parentName:"ul"},"Note : \u5fc5\u987b\u5728torch1.9.0\u53ca\u4ee5\u540e\u7248\u672c  \u624d\u751f\u6548 \uff01\uff01\uff01")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"\"\"\"\n( input_dim, hidden_size, proj_size ) \n+--------------------------+-----------------------------------------+\n|   pytorch-asr-extension  |  ( input_dim, hidden_size, proj_size )   |\n+==========================+=========================================+\n|    intx\u4e2d\u7684\u666e\u901aLSTMP      |  ( input_dim, proj_size, hidden_size )   |\n+--------------------------+-----------------------------------------+\n|  NormalizeFastLSTMP(nn.LSTM) |  ( input_dim, hidden_size, proj_size )   |\n+--------------------------+-----------------------------------------+\n\"\"\"\n#\u4ecenn.LSTMP \u8f6c\u4e3a intx\u666e\u901aLSTMP\u7684 \u903b\u8f91\n#\u6ce8\u610fnn.LSTMP \u4e2d\u4f1a\u6bd4\u666e\u901a\u7684LSTMP\u591a\u4e00\u4e2abias\u7684\u53c2\u6570\uff0c\u4ecenn.LSTMP \u8f6c\u4e3a intx\u666e\u901aLSTMP\u65f6\uff0c\u6ce8\u610f\u5c06bias_ih_l0\u548cbias_hh_l0 \u76f8\u52a0 \u8d4b\u7ed9input_linearity.bias\uff0c \u53cd\u5411\u540c\u7406\n#\u800c\u4eceintx\u666e\u901aLSTMP \u8f6c\u4e3a nn.LSTMP\u65f6\uff0c\u6ce8\u610finput_linearity.bias\u76f4\u63a5\u8d4b\u7ed9bias_ih_l0\uff0cbias_hh_l0\u76f4\u63a5\u7f6e\u96f6\u503c\uff0c \u53cd\u5411\u540c\u7406\n\nfor k,v in checkpoint.items():\n    if 'weight_ih_l0' in k and 'reverse' not in k:\n        new_key = k.replace('weight_ih_l0', 'input_linearity.weight')\n    elif 'bias_ih_l0' in k and 'reverse' not in k:\n        new_key = k.replace('bias_ih_l0', 'input_linearity.bias')\n        v = v.unsqueeze(0)\n        bias = v\n    elif 'weight_hh_l0' in k and 'reverse' not in k:\n        new_key = k.replace('weight_hh_l0', 'state_linearity.weight')\n    elif 'weight_hr_l0' in k and 'reverse' not in k:\n        new_key = k.replace('weight_hr_l0', 'state_projection.weight')\n    elif 'bias_hh_l0' in k and 'reverse' not in k:\n        new_key = k.replace('bias_hh_l0', 'input_linearity.bias')\n        v = v.unsqueeze(0)\n        bias = v + bias\n    elif 'lstmp.weight_ih_l0_reverse' in k:\n        new_key = k.replace('lstmp.weight_ih_l0_reverse', 'lstmp2.input_linearity.weight')\n    elif 'lstmp.bias_ih_l0_reverse' in k:\n        new_key = k.replace('lstmp.bias_ih_l0_reverse', 'lstmp2.input_linearity.bias')\n        v = v.unsqueeze(0)\n        bias = v\n    elif 'lstmp.weight_hh_l0_reverse' in k:\n        new_key = k.replace('lstmp.weight_hh_l0_reverse', 'lstmp2.state_linearity.weight')\n    elif 'lstmp.weight_hr_l0_reverse' in k:\n        new_key = k.replace('lstmp.weight_hr_l0_reverse', 'lstmp2.state_projection.weight')\n    elif 'lstmp.bias_hh_l0_reverse' in k:\n        new_key = k.replace('lstmp.bias_hh_l0_reverse', 'lstmp2.input_linearity.bias')\n        v = v.unsqueeze(0)\n        bias = v + bias\n    else:\n        new_key = k\n    if 'bias_hh_l0' in k :\n        model_dict[new_key] = bias.data.reshape(-1)\n    else:\n        model_dict[new_key] = v.data\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"#\u53cc\u5411LSTMP\u66ff\u6362\ninput_size = 100\nhidden_size = 100\ncell_num = 50\n\n# self.lstmp = nn.LSTM(input_size, hidden_size, num_layers=1, batch_first=True, bidirectional=True, proj_size = 50)\nself.lstmp = linger.LSTMP(100, 50, 100, batch_first=True, go_forward=True)\nself.lstmp2 = linger.LSTMP(100, 50, 100, batch_first=True, go_forward=False)\n\n")),(0,l.kt)("h3",{id:"43-fasturlstmp"},"4.3 FastURLSTMP"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u672c\u5b9e\u73b0\u4e2dFastUBLSTMP \u4e2d\u76f4\u63a5\u79fb\u690d\u4e86torch\u6700\u65b0\u7248\u7684nn.LSTM\u5b9e\u73b0\u8fc7\u6765 \u6b63\u53cd\u5411\u7684lstmp\u90fd\u901a\u8fc7nn.LSTM\u6765\u53d8\u76f8\u5b9e\u73b0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Note : \u5fc5\u987b\u5728torch1.9.0\u53ca\u4ee5\u540e\u7248\u672c\u624d\u751f\u6548")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u4ee5\u4e0b\u4e3aintx\u666e\u901aUBLSTMP\u5230FASTUBLSTMP\u7684state_dict key\u66ff\u6362\u903b\u8f91\u4ec5\u4f9b\u53c2\u8003"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"\ncheckpoint = torch.load('dump_ub/torch_ublstmp.pt')\nmodel_dict = {}\nbias = None\nfor k,v in checkpoint.items():\n    if \"backward_lstmp\" in k or \"forward_lstmp\" in k:\n        if 'input_linearity.weight' in k:\n            new_key = k.replace('input_linearity.weight', 'weight_ih_l0')\n        elif 'input_linearity.bias' in k:\n            new_key = k.replace('input_linearity.bias', 'bias_ih_l0')\n            bias = v\n            zeros_bias = torch.zeros_like(bias)  ##\u7ed9\u4e88bias_hh_l0 \u4ee5\u51680\u503c\n            new_key_2 = k.replace('input_linearity.bias', 'bias_hh_l0')\n            model_dict[new_key_2] = zeros_bias.data\n        elif 'state_linearity.weight' in k:\n            new_key = k.replace('state_linearity.weight', 'weight_hh_l0')\n        elif 'state_projection.weight' in k:\n            new_key = k.replace('state_projection.weight', 'weight_hr_l0')\n        else:\n            new_key = k\n\n        model_dict[new_key] = v.data\n    else:\n        model_dict[k] = v\n\nnet.load_state_dict(model_dict)\n\n")))}u.isMDXComponent=!0}}]);