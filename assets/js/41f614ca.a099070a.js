"use strict";(self.webpackChunkls_docs_web=self.webpackChunkls_docs_web||[]).push([[2938],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(a),h=r,u=c["".concat(p,".").concat(h)]||c[h]||d[h]||i;return a?n.createElement(u,o(o({ref:t},m),{},{components:a})):n.createElement(u,o({ref:t},m))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},31722:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={},o="\u63d0\u8d27\u5355",l={unversionedId:"chips/600X/tool/lisa_plugin_zephyr/manifest",id:"chips/600X/tool/lisa_plugin_zephyr/manifest",isDocsHomePage:!1,title:"\u63d0\u8d27\u5355",description:"\u672c\u7ae0\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u63d0\u8d27\u5355\u7684\u8be6\u7ec6\u4fe1\u606f\u3002",source:"@site/docs/chips/600X/tool/lisa_plugin_zephyr/manifest.md",sourceDirName:"chips/600X/tool/lisa_plugin_zephyr",slug:"/chips/600X/tool/lisa_plugin_zephyr/manifest",permalink:"/docs-csk6/chips/600X/tool/lisa_plugin_zephyr/manifest",version:"current",frontMatter:{}},p=[{value:"\u63d0\u8d27\u5355\u6587\u4ef6",id:"\u63d0\u8d27\u5355\u6587\u4ef6",children:[]},{value:"Remotes",id:"remotes",children:[]},{value:"Projects",id:"projects",children:[]},{value:"Defaults",id:"defaults",children:[]},{value:"Self",id:"self",children:[]},{value:"Version",id:"version",children:[]}],s={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u63d0\u8d27\u5355"},"\u63d0\u8d27\u5355"),(0,r.kt)("p",null,"\u672c\u7ae0\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u63d0\u8d27\u5355\u7684\u8be6\u7ec6\u4fe1\u606f\u3002"),(0,r.kt)("h2",{id:"\u63d0\u8d27\u5355\u6587\u4ef6"},"\u63d0\u8d27\u5355\u6587\u4ef6"),(0,r.kt)("p",null,"West manifests are YAML files. Manifests have a top-level ",(0,r.kt)("inlineCode",{parentName:"p"},"manifest")," section with some subsections, like this:"),(0,r.kt)("p",null,"\u63d0\u8d27\u5355(manifest)\u662f YAML \u6587\u4ef6\u3002\u6709\u4e00\u4e2a\u9876\u7ea7\u8d27\u5355\u680f\u548c\u4e00\u4e9b\u5b50\u680f\uff0c\u5982\u4e0b\u6240\u793a:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-YAML"},'manifest:\n  remotes:\n    # \u9879\u76ee URL \u7684\u7b80\u79f0\n  projects:\n    # \u9879\u76ee\u6e05\u5355\n  defaults:\n    # \u9ed8\u8ba4\u9879\u76ee\u914d\u7f6e\n  self:\n    # \u4e0e\u8d27\u5355\u5b58\u50a8\u76f8\u5173\u7684\u914d\u7f6e\n    # \u4f8b\u5982\uff0c\u5305\u542b manifest.yml \u7684\u5b58\u50a8\u5e93\n  version: "<schema-version>"\n  group-filter:\n    # \u8981\u542f\u7528\u6216\u8005\u7981\u7528\u7684\u9879\u76ee\u7ec4\u5217\u8868\n')),(0,r.kt)("p",null,"In YAML terms, the manifest file contains a mapping, with a ",(0,r.kt)("inlineCode",{parentName:"p"},"manifest")," key. Any other keys and their contents are ignored (west v0.5 also required a ",(0,r.kt)("inlineCode",{parentName:"p"},"west")," key, but this is ignored starting with v0.6)."),(0,r.kt)("p",null,"\u5728 YAML \u672f\u8bed\u4e2d\uff0cYAML \u6587\u4ef6\u5305\u542b\u4e00\u4e2a\u5e26\u6709 manifest \u5b57\u6bb5\u3002"),(0,r.kt)("p",null,"The manifest contains subsections, like defaults, remotes, projects, and self. In YAML terms, the value of the manifest key is also a mapping, with these \u201csubsections\u201d as keys. As of west v0.10, all of these \u201csubsection\u201d keys are optional."),(0,r.kt)("p",null,"manifest \u5305\u542b\u5b50\u5b57\u6bb5\uff0c\u5982 ",(0,r.kt)("inlineCode",{parentName:"p"},"default"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"remotes"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"projects"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"self"),"\u3002\u5f53\u7136\uff0cmanifest \u7684\u5b50\u5b57\u6bb5\u90fd\u662f\u53ef\u9009\u7684\u3002"),(0,r.kt)("p",null,"The projects value is a list of repositories managed by west and associated metadata. We\u2019ll discuss it soon, but first we will describe the remotes section, which can be used to save typing in the projects list."),(0,r.kt)("p",null,"\u8fd9\u90e8\u5206\u53ef\u4ee5\u4e0d\u7ffb\u8bd1"),(0,r.kt)("h2",{id:"remotes"},"Remotes"),(0,r.kt)("p",null,"The remotes subsection contains a sequence which specifies the base URLs where projects can be fetched from."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"remotes")," \u6307\u5b9a\u8fdc\u7aef\u9879\u76ee\u7684 URL \u5730\u5740\u3002"),(0,r.kt)("p",null,"Each remotes element has a name and a \u201cURL base\u201d. These are used to form the complete Git fetch URL for each project. A project\u2019s fetch URL can be set by appending a project-specific path onto a remote URL base. (As we\u2019ll see below, projects can also specify their complete fetch URLs.)"),(0,r.kt)("p",null,"\u6bcf\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"remotes")," \u90fd\u6709\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"name"),"(\u540d\u79f0) \u548c \u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"url-base")," \u5b57\u6bb5\uff0c\u8fd9\u4e3a\u9879\u76ee\u63d0\u4f9b\u4e86\u5b8c\u6574 Git \u9879\u76ee\u7684 URL \u5730\u5740\u3002"),(0,r.kt)("p",null,"For example:"),(0,r.kt)("p",null,"\u4f8b\u5982:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-YAML"},"manifest:\n  # ...\n  remotes:\n    - name: remote1\n      url-base: https://git.example.com/base1\n    - name: remote2\n      url-base: https://git.example.com/base2\n")),(0,r.kt)("p",null,"The remotes keys and their usage are in the following table."),(0,r.kt)("p",null,"\u5c0f\u8868\u5217\u51fa\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"remotes")," \u4e2d\u7684\u5b57\u6bb5\u548c\u8bf4\u660e\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5fc5\u987b\uff0cremote \u7684\u552f\u4e00\u540d\u79f0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"url-base"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5fc5\u987b\uff0c\u8fdc\u7a0b\u9879\u76ee\u7684 URL \u5730\u5740")))),(0,r.kt)("p",null,"Above, two remotes are given, with names remote1 and remote2. Their URL bases are respectively ",(0,r.kt)("a",{parentName:"p",href:"https://git.example.com/base1"},"https://git.example.com/base1")," and ",(0,r.kt)("a",{parentName:"p",href:"https://git.example.com/base2"},"https://git.example.com/base2"),". You can use SSH URL bases as well; for example, you might use ",(0,r.kt)("a",{parentName:"p",href:"mailto:git@example.com"},"git@example.com"),":base1 if remote1 supported Git over SSH as well. Anything acceptable to Git will work."),(0,r.kt)("p",null,"\u4e0a\u9762\u793a\u4f8b\u7ed9\u51fa\u4e24\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"remote"),"\uff0c\u5206\u522b\u540d\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"remote1")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"remote2"),"\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"url-base")," \u9879\u76ee\u7684\u5730\u5740\u5206\u522b\u662f ",(0,r.kt)("a",{parentName:"p",href:"https://git.example.com/base1"},"https://git.example.com/base1")," \u548c ",(0,r.kt)("a",{parentName:"p",href:"https://git.example.com/base2%EF%BC%8C%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8"},"https://git.example.com/base2\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SSH")," URL \u5730\u5740\u65b9\u5f0f\uff0c\u53ea\u8981\u662f Git \u652f\u6301\u7684\u683c\u5f0f\u5c31\u884c\u3002"),(0,r.kt)("h2",{id:"projects"},"Projects"),(0,r.kt)("p",null,"The projects subsection contains a sequence describing the project repositories in the west workspace. Every project has a unique name. You can specify what Git remote URLs to use when cloning and fetching the projects, what revisions to track, and where the project should be stored on the local file system."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"projects")," \u6307\u5b9a\u4e86\u9879\u76ee\u7684\u4fe1\u606f\u3002\u6bcf\u4e00\u4e2a\u9879\u76ee\u90fd\u6709\u4e00\u4e2a\u552f\u4e00(name)\u540d\u79f0\uff0c\u53ef\u4ee5\u6307\u5b9a\u9879\u76ee Git \u8fdc\u7a0b URL \u5730\u5740\uff0c\u9879\u76ee\u7684\u4fee\u6539\u63d0\u4ea4 commit\uff0c\u4ee5\u53ca\u9879\u76ee\u5e94\u8be5\u5b58\u653e\u5728\u672c\u673a\u4e0a\u7684\u4f4d\u7f6e\u3002"),(0,r.kt)("p",null,"Here is an example. We\u2019ll assume the remotes given above."),(0,r.kt)("p",null,"\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u5047\u8bbe\u4e0a\u9762\u7ed9\u51fa ",(0,r.kt)("inlineCode",{parentName:"p"},"remotes"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-YAML"},"manifest:\n  projects:\n    - name: proj1\n      remote: remote1\n      path: extra/project-1\n    - name: proj2\n      repo-path: my-path\n      remote: remote2\n      revision: v1.3\n    - name: proj3\n      url: https://github.com/user/project-three\n      revision: abcde413a111\n")),(0,r.kt)("p",null,"\u4e0a\u9762\u7684 YAML \u6587\u4ef6\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"proj1 has remote remote1, so its Git fetch URL is ",(0,r.kt)("a",{parentName:"p",href:"https://git.example.com/base1/proj1"},"https://git.example.com/base1/proj1"),". The remote url-base is appended with a / and the project name to form the URL."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"proj1")," \u6709\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"remote")," ",(0,r.kt)("inlineCode",{parentName:"p"},"remote1"),"\uff0c\u5b83\u7684 Git \u9879\u76ee URL \u5730\u5740\u4e3a\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://git.example.com/base1/proj1%EF%BC%8C%60remote%60%EF%BC%8C%60remote%60"},"https://git.example.com/base1/proj1\uff0c`remote`\uff0c`remote`")," ",(0,r.kt)("inlineCode",{parentName:"p"},"url-base")," \u540e\u9762\u9644\u52a0\u4e00\u4e2a/\u548c\u9879\u76ee\u540d\u6765\u5f62\u6210 URL\u3002"),(0,r.kt)("p",{parentName:"li"},"Locally, this project will be cloned at path extra/project-1 relative to the west workspace\u2019s root directory, since it has an explicit path attribute with this value."),(0,r.kt)("p",{parentName:"li"},"\u5728\u672c\u5730\uff0c\u8fd9\u4e2a\u9879\u76ee\u4f1a\u88ab\u514b\u9686\u5230 CSK SDK \u5de5\u4f5c\u7a7a\u95f4\u7684\u6839\u76ee\u5f55\u4e0b\u7684 extra/project-1 \u76ee\u5f55\u4e2d\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"path")," \u5b57\u6bb5\u6307\u5b9a\u4e86\u8fd9\u4e2a\u503c\u3002"),(0,r.kt)("p",{parentName:"li"},"Since the project has no revision specified, master is used by default. The current tip of this branch will be fetched and checked out as a detached HEAD when west next updates this project."),(0,r.kt)("p",{parentName:"li"},"\u7531\u4e8e\u6ca1\u6709\u6307\u5b9a\u9879\u76ee commit\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528 master \u5206\u652f\u3002\u5f53\u4e0b\u4e00\u6b21\u66f4\u65b0\u65f6\uff0c\u9879\u76ee\u7684\u6700\u65b0\u63d0\u4ea4\u5c06\u4f5c\u4e3a\u4e00\u4e2a\u5206\u79bb\u7684 HEAD \u6765\u66f4\u65b0\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"proj2 has a remote and a repo-path, so its fetch URL is ",(0,r.kt)("a",{parentName:"p",href:"https://git."},"https://git."),"     example.com/base2/my-path. The repo-path attribute, if present, overrides the default name when forming the fetch URL."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"proj2")," \u6709\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"remote")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"repo-path")," \u5b57\u6bb5\uff0c\u6240\u4ee5\u5b83\u7684 URL \u5730\u5740\u662f\uff1a ",(0,r.kt)("a",{parentName:"p",href:"https://git.example.com/base2/my-path%E3%80%82%E5%A6%82%E6%9E%9C"},"https://git.example.com/base2/my-path\u3002\u5982\u679c")," ",(0,r.kt)("inlineCode",{parentName:"p"},"repo-path")," \u5b57\u6bb5\u5b58\u5728\uff0c\u5b83\u4f1a\u5728\u62c9\u53d6\u9879\u76ee\u4ed3\u5e93 URL \u65f6\u8986\u76d6\u9ed8\u8ba4\u7684\u540d\u79f0\u3002"),(0,r.kt)("p",{parentName:"li"},"Since the project has no path attribute, its name is used by default. It will be cloned into a directory named proj2. The commit pointed to by the v1.3 tag will be checked out when west updates the project."),(0,r.kt)("p",{parentName:"li"},"\u7531\u4e8e\u9879\u76ee\u6ca1\u6709 ",(0,r.kt)("inlineCode",{parentName:"p"},"path")," \u5b57\u6bb5\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u5176\u540d\u79f0\uff0c\u5b83\u4f1a\u88ab\u514b\u9686\u5230\u4e00\u4e2a\u540d\u4e3a proj2 \u7684\u76ee\u5f55\u4e2d\u3002\u5f53\u66f4\u65b0\u65f6\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"revision")," v1.3 \u7684 Git tag \u5c06\u4f1a\u88ab\u66f4\u65b0\u5230\u672c\u5730\u4e0a\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"proj3 has an explicit url, so it will be fetched from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/user/project-three"},"https://github.com/user/project-three"),"."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"proj3"),"\u6709\u4e00\u4e2a url \u5b57\u6bb5\uff0c\u66f4\u65b0\u65f6\u5c06\u4f1a\u4ece\u8fd9\u4e2a URL \u4e2d\u66f4\u65b0\u9879\u76ee\u3002"),(0,r.kt)("p",{parentName:"li"},"Its local path defaults to its name, proj3. Commit abcde413a111 will be checked out when it is next updated."),(0,r.kt)("p",{parentName:"li"},"\u672c\u5730\u8def\u5f84\u9ed8\u8ba4\u7684\u540d\u79f0\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"proj3"),"\uff0c\u4e0b\u4e00\u6b21\u66f4\u65b0\u65f6\u5c06\u4f1a\u4ece\u63d0\u4ea4 abcde413a111 \u66f4\u65b0\u3002"))),(0,r.kt)("p",null,"The available project keys and their usage are in the following table. Sometimes we\u2019ll refer to the defaults subsection; it will be described next."),(0,r.kt)("p",null,"\u4e0b\u8868\u5217\u51fa\u4e86\u53ef\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"projects")," \u5b57\u6bb5\u548c\u8bf4\u660e\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},'Mandatory; a unique name for the project. The name cannot be one of the reserved values \u201cwest\u201d or \u201cmanifest\u201d. The name must be unique in the manifest file. \u5fc5\u987b\u7684\uff0c\u9879\u76ee\u7684\u552f\u4e00\u540d\u79f0\uff0c\u540d\u79f0\u4e0d\u80fd\u662f\u4fdd\u7559\u81f3 "west" \u6216 "manifest" \u4e4b\u4e00\uff0c\u8be5\u540d\u79f0\u5728 YAML \u6587\u4ef6\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"remote, url"),(0,r.kt)("td",{parentName:"tr",align:null},"Mandatory (one of the two, but not both). \u5fc5\u987b\u6709\u5176\u4e2d\u4e00\u4e2a\uff0c\u4e0d\u9700\u8981\u4e24\u4e2a\u90fd\u5199\u3002If the project has a remote, that remote\u2019s url-base will be combined with the project\u2019s name (or repo-path, if it has one) to form the fetch URL instead. \u5982\u679c ",(0,r.kt)("inlineCode",{parentName:"td"},"project")," \u6709 ",(0,r.kt)("inlineCode",{parentName:"td"},"remote")," \u5b57\u6bb5\uff0c\u90a3\u4e48 ",(0,r.kt)("inlineCode",{parentName:"td"},"remote's")," ",(0,r.kt)("inlineCode",{parentName:"td"},"url-base")," \u5b57\u6bb5\u5c06\u4e0e ",(0,r.kt)("inlineCode",{parentName:"td"},"project")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"td"},"name")," \uff08\u6216\u8005 ",(0,r.kt)("inlineCode",{parentName:"td"},"repo-path"),"\uff0c \u5982\u679c\u6709\u7684\u8bdd\uff09 \u5b57\u6bb5\u7ec4\u5408\u5f62\u6210\u4e00\u4e2a URL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"repo-path"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. If given, this is concatenated on to the remote\u2019s url-base instead of the project\u2019s name to form its fetch URL. Projects may not have both url and repo-path attributes. \u53ef\u9009\uff0c\u5982\u679c\u503c\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5c06\u4f1a\u8ddf ",(0,r.kt)("inlineCode",{parentName:"td"},"remote")," ",(0,r.kt)("inlineCode",{parentName:"td"},"url-base")," \u5b57\u6bb5\u7ec4\u5408\u6210 URL\uff0c\u800c\u4e0d\u662f\u8ddf ",(0,r.kt)("inlineCode",{parentName:"td"},"project")," \u4e2d ",(0,r.kt)("inlineCode",{parentName:"td"},"name"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"td"},"project")," \u4e0d\u80fd\u540c\u65f6\u5b58\u5728 ",(0,r.kt)("inlineCode",{parentName:"td"},"url")," \u548c ",(0,r.kt)("inlineCode",{parentName:"td"},"repo-path")," \u5b57\u6bb5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"revision"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. The Git revision that west update should check out. This will be checked out as a detached HEAD by default, to avoid conflicting with local branch names. If not given, the revision value from the defaults subsection will be used if present. \u53ef\u9009\uff0cSDK \u66f4\u65b0\u65f6\u4f1a\u4ece\u8be5\u5b57\u6bb5\u62c9\u53d6\u4ee3\u7801\u66f4\u65b0\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 HEAD \u5206\u652f\u51fa\u6765\u4ee5\u907f\u514d\u4e0e\u672c\u5730\u5206\u652f\u9020\u6210\u51b2\u7a81\u3002\u5982\u679c\u8be5\u5b57\u6bb5\u4e0d\u586b\uff0c\u5219\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"td"},"defaults")," \u4e2d ",(0,r.kt)("inlineCode",{parentName:"td"},"revision")," \u5b57\u6bb5(\u5982\u679c\u5b58\u5728\u7684\u8bdd)\u3002A project revision can be a branch, tag, or SHA. ",(0,r.kt)("inlineCode",{parentName:"td"},"project")," ",(0,r.kt)("inlineCode",{parentName:"td"},"revision")," \u53ef\u4ee5\u662f\u5206\u652f(branch)\uff0c\u6807\u7b7e(tag) \u6216\u8005 SHA\u3002The default revision is master if not otherwise specified. \u5982\u679c\u672a\u6307\u5b9a\u5176\u4ed6\u7684\u503c\uff0c\u5219\u9ed8\u8ba4 ",(0,r.kt)("inlineCode",{parentName:"td"},"revision")," \u4e3a master")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. Relative path specifying where to clone the repository locally, relative to the top directory in the west workspace. If missing, the project\u2019s name is used as a directory name. \u53ef\u9009\uff0c\u514b\u9686\u4ed3\u5e93\u5230\u672c\u5730 SDK \u7684\u9876\u5c42\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u5982\u679c\u7f3a\u5c11 ",(0,r.kt)("inlineCode",{parentName:"td"},"project")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"td"},"name")," \u5b57\u6bb5\uff0c\u5219\u5c06\u5176\u7528\u4f5c\u76ee\u5f55\u540d\u79f0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"clone-path"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. If given, a positive integer which creates a shallow history in the cloned repository limited to the given number of commits. This can only be used if the revision is a branch or tag. \u53ef\u9009\uff0c\u5982\u679c\u7ed9\u5b9a\uff0c\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5b83\u5728\u514b\u9686\u7684\u4ed3\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u6d45\u5386\u53f2\uff0c\u9650\u5236\u4e3a\u7ed9\u5b9a\u7684\u63d0\u4ea4\u6570\u91cf\u3002\u8fd9\u53ea\u80fd\u5728\u5982\u679c ",(0,r.kt)("inlineCode",{parentName:"td"},"revision")," \u5b57\u6bb5\u7684\u503c\u662f\u4e00\u4e2a\u5206\u652f(branch)\u6216\u8005\u6807\u7b7e(tag)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"west-commands"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. If given, a relative path to a YAML file within the project which describes additional west commands provided by that project. This file is named west-commands.yml by convention. See Extensions for details. \u5982\u679c\u7ed9\u5b9a\uff0c\u9879\u76ee\u4e2d YAML \u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u63cf\u8ff0\u4e86\u8be5\u9879\u76ee\u63d0\u4f9b\u7684\u5176\u4ed6 west \u547d\u4ee4\u3002\u8fd9\u4e2a\u6587\u4ef6\u6309\u7167\u60ef\u4f8b\u547d\u540d\u4e3a west-commands.yml\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"import"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. If true, imports projects from manifest files in the given repository into the current manifest. See Manifest Imports for details.\u53ef\u9009\uff0c\u5982\u679c\u4e3a ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," \u5219\u5c06\u9879\u76ee\u4ece\u7ed9\u5b9a\u4ed3\u5e93\u4e2d\u7684 YAML \u6587\u4ef6\u5bfc\u5165\u5230\u5f53\u524d YAML \u6587\u4ef6\u4e2d\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"groups"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional, a list of groups the project belongs to. See Project Groups and Active Projects for details. \u53ef\u9009\uff0c\u9879\u76ee\u6240\u5c5e\u7684\u7ec4(group)\u5217\u8868")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"submodules"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. You can use this to make west update also update Git submodules defined by the project. See Git Submodules in Projects for details. \u53ef\u9009\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"td"},"lisa zep update")," \u66f4\u65b0\u4ee3\u7801\u540c\u65f6\u66f4\u65b0 Git \u5b50\u6a21\u5757\u7684\u4ee3\u7801")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"userdata"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. The value is an arbitrary YAML value. See Repository user data. \u53ef\u9009\uff0c\u8be5\u503c\u662f\u4efb\u610f\u7684 YAML \u503c\u3002")))),(0,r.kt)("h2",{id:"defaults"},"Defaults"),(0,r.kt)("p",null,"The defaults subsection can provide default values for project attributes. In particular, the default remote name and revision can be specified here. Another way to write the same manifest we have been describing so far using defaults is:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"defaults")," \u5b57\u6bb5\u53ef\u4ee5\u4e3a\u9879\u76ee\u63d0\u4f9b\u9ed8\u8ba4\u503c\uff0c\u53ef\u4ee5\u6307\u5b9a ",(0,r.kt)("inlineCode",{parentName:"p"},"remote")," \u4e2d ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"revision"),"\u3002\u53e6\u4e00\u79cd\u4f7f\u7528\u9ed8\u8ba4\u503c\u7f16\u5199\u6e05\u5355\u7684\u65b9\u6cd5\u662f:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-YAML"},"manifest:\n  defaults:\n    remote: remote1\n    revision: v1.3\n\n  remotes:\n    - name: remote1\n      url-base: https://git.example.com/base1\n    - name: remote2\n      url-base: https://git.example.com/base2\n\n  projects:\n    - name: proj1\n      path: extra/project-1\n      revision: master\n    - name: proj2\n      repo-path: my-path\n      remote: remote2\n    - name: proj3\n      url: https://github.com/user/project-three\n      revision: abcde413a111\n")),(0,r.kt)("p",null,"The available defaults keys and their usage are in the following table."),(0,r.kt)("p",null,"\u4e0b\u8868\u5217\u51fa\u53ef\u7528\u7684\u5b57\u6bb5\u548c\u8bf4\u660e\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"remote"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. This will be used for a project\u2019s remote if it does not have a url or remote key set. \u53ef\u9009\uff0c\u5982\u679c ",(0,r.kt)("inlineCode",{parentName:"td"},"project")," \u4e2d\u6ca1\u6709 ",(0,r.kt)("inlineCode",{parentName:"td"},"url")," \u548c ",(0,r.kt)("inlineCode",{parentName:"td"},"remote")," \u5b57\u6bb5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u6bb5\u5c06\u4f1a\u9ed8\u8ba4\u4e3a ",(0,r.kt)("inlineCode",{parentName:"td"},"project's")," \u4e2d ",(0,r.kt)("inlineCode",{parentName:"td"},"remote")," \u5b57\u6bb5\u7684\u503c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"revision"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. This will be used for a project\u2019s revision if it does not have one set. If not given, the default is master. \u53ef\u9009\uff0c\u5982\u679c ",(0,r.kt)("inlineCode",{parentName:"td"},"project")," \u4e2d\u6ca1\u6709 ",(0,r.kt)("inlineCode",{parentName:"td"},"revision")," \u5b57\u6bb5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u6bb5\u4f1a\u9ed8\u8ba4\u4e3a ",(0,r.kt)("inlineCode",{parentName:"td"},"project's")," \u4e2d ",(0,r.kt)("inlineCode",{parentName:"td"},"revision")," \u5b57\u6bb5\u7684\u503c")))),(0,r.kt)("h2",{id:"self"},"Self"),(0,r.kt)("p",null,"The self subsection can be used to control the manifest repository itself."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"self")," \u5b57\u6bb5\u7528\u4e8e\u63a7\u5236 ",(0,r.kt)("inlineCode",{parentName:"p"},"manifest")," \u4ed3\u5e93\u672c\u8eab\u3002"),(0,r.kt)("p",null,"As an example, let\u2019s consider this snippet from the zephyr repository\u2019s west.yml:"),(0,r.kt)("p",null,"\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b zephyr \u4ed3\u5e93\u7684 West.yml \u7684\u8fd9\u4e2a\u7247\u6bb5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-YAML"},"manifest:\n  # ...\n  self:\n    path: zephyr\n    west-commands: scripts/west-commands.yml\n")),(0,r.kt)("p",null,"This ensures that the zephyr repository is cloned into path zephyr, though as explained above that would have happened anyway if cloning from the default manifest URL, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/zephyrproject-rtos/zephyr"},"https://github.com/zephyrproject-rtos/zephyr"),". Since the zephyr repository does contain extension commands, its self entry declares the location of the corresponding west-commands.yml relative to the repository root."),(0,r.kt)("p",null,"\u8fd9\u786e\u4fdd\u4e86 zephyr \u4ed3\u5e93\u88ab\u514b\u9686\u5230\u8def\u5f84 ",(0,r.kt)("inlineCode",{parentName:"p"},"zephyr")," \u4e2d\uff0cself \u5b57\u6bb5\u58f0\u660e\u4e86\u76f8\u5e94\u7684 west-commands.yml \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002"),(0,r.kt)("p",null,"The available self keys and their usage are in the following table."),(0,r.kt)("p",null,"\u4e0b\u8868\u5217\u51fa\u53ef\u7528\u7684\u5b57\u6bb5\u548c\u8bf4\u660e\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. The path west init should clone the manifest repository into, relative to the west workspace topdir. \u53ef\u9009\uff0c\u514b\u9686\u9879\u76ee\u5230\u76f8\u5bf9\u4e8e SDK \u9876\u5c42\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84 If not given, the basename of the path component in the manifest repository URL will be used by default. For example, if the URL is ",(0,r.kt)("a",{parentName:"td",href:"https://git.example.com/project-repo"},"https://git.example.com/project-repo"),", the manifest repository would be cloned to the directory project-repo. \u5982\u679c\u672a\u6307\u5b9a\u503c\uff0c\u5219\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"td"},"manifest")," \u4ed3\u5e93 URL \u4e2d\u7684\u8def\u5f84\u7ec4\u4ef6\u7684\u57fa\u540d\u3002\u4f8b\u5982\uff0c\u5982\u679c URL \u662f ",(0,r.kt)("a",{parentName:"td",href:"https://git.example.com/project-repo%EF%BC%8C%E5%88%99%E4%BB%93%E5%BA%93%E5%B0%86%E8%A2%AB%E5%85%8B%E9%9A%86%E5%88%B0%E7%9B%AE%E5%BD%95"},"https://git.example.com/project-repo\uff0c\u5219\u4ed3\u5e93\u5c06\u88ab\u514b\u9686\u5230\u76ee\u5f55")," project-repo")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"west-commands"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. This is analogous to the same key in a project sequence element. \u53ef\u9009\uff0c\u8ddf ",(0,r.kt)("inlineCode",{parentName:"td"},"project")," \u4e2d ",(0,r.kt)("inlineCode",{parentName:"td"},"west-commands")," \u5b57\u6bb5\u610f\u601d\u4e00\u6837")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"import"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. This is also analogous to the projects key, but allows importing projects from other files in the manifest repository. See Manifest Imports. \u53ef\u9009\uff0c\u8ddf ",(0,r.kt)("inlineCode",{parentName:"td"},"project")," \u4e2d ",(0,r.kt)("inlineCode",{parentName:"td"},"west-commands")," \u5b57\u6bb5\u610f\u601d\u4e00\u6837\uff0c\u4f46\u662f\u5141\u8bb8\u4ece manifest \u4ed3\u5e93\u4e2d\u5176\u4ed6\u6587\u4ef6\u5bfc\u5165\u9879\u76ee")))),(0,r.kt)("h2",{id:"version"},"Version"),(0,r.kt)("p",null,"The version subsection can be used to mark the lowest version of the manifest file schema that can parse this file\u2019s data:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"version")," \u53ef\u7528\u4e8e\u6807\u8bb0 ",(0,r.kt)("inlineCode",{parentName:"p"},"manifest")," \u7684\u6700\u4f4e\u7248\u672c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-YAML"},'manifest:\n  version: "0.10"\n  # \u6807\u8bb0\u6b64\u6587\u4ef6\u4f7f\u7528 0.10 \u7248\u7684 west manifest \u6587\u4ef6\u683c\u5f0f\n')))}m.isMDXComponent=!0}}]);