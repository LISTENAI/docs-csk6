"use strict";(self.webpackChunkls_docs_web=self.webpackChunkls_docs_web||[]).push([[110],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(r),u=a,m=c["".concat(l,".").concat(u)]||c[u]||h[u]||i;return r?n.createElement(m,s(s({ref:t},p),{},{components:r})):n.createElement(m,s({ref:t},p))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var d=2;d<i;d++)s[d]=r[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},19948:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const i={},s="\u7cfb\u7edf\u7ebf\u7a0b",o={unversionedId:"chips/600X/kernel/system_threads",id:"chips/600X/kernel/system_threads",isDocsHomePage:!1,title:"\u7cfb\u7edf\u7ebf\u7a0b",description:"A system thread is a thread that the kernel spawns automatically during system initialization.",source:"@site/docs/chips/600X/kernel/system_threads.md",sourceDirName:"chips/600X/kernel",slug:"/chips/600X/kernel/system_threads",permalink:"/docs-csk6/chips/600X/kernel/system_threads",version:"current",frontMatter:{},sidebar:"docs/chips/600X",previous:{title:"\u7ebf\u7a0b",permalink:"/docs-csk6/chips/600X/kernel/threads"},next:{title:"\u5de5\u4f5c\u961f\u5217\u7ebf\u7a0b",permalink:"/docs-csk6/chips/600X/kernel/workqueue"}},l=[{value:"Main thread \u4e3b\u7ebf\u7a0b",id:"main-thread-\u4e3b\u7ebf\u7a0b",children:[]},{value:"Idle thread \u7a7a\u95f2\u7ebf\u7a0b",id:"idle-thread-\u7a7a\u95f2\u7ebf\u7a0b",children:[]}],d={toc:l};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u7cfb\u7edf\u7ebf\u7a0b"},"\u7cfb\u7edf\u7ebf\u7a0b"),(0,a.kt)("p",null,"A system thread is a thread that the kernel spawns automatically during system initialization."),(0,a.kt)("p",null,"The kernel spawns the following system threads:"),(0,a.kt)("p",null,"\u7cfb\u7edf\u7ebf\u7a0b\u662f\u5185\u6838\u5728\u7cfb\u7edf\u521d\u59cb\u5316\u671f\u95f4\u81ea\u52a8\u751f\u6210\u7684\u7ebf\u7a0b\u3002"),(0,a.kt)("p",null,"\u5185\u6838\u4f1a\u521b\u5efa\u4ee5\u4e0b\u7cfb\u7edf\u7ebf\u7a0b:"),(0,a.kt)("h3",{id:"main-thread-\u4e3b\u7ebf\u7a0b"},"Main thread \u4e3b\u7ebf\u7a0b"),(0,a.kt)("p",null,"This thread performs kernel initialization, then calls the application\u2019s main() function (if one is defined)."),(0,a.kt)("p",null,"\u8fd9\u4e2a\u7ebf\u7a0b\u6267\u884c\u5185\u6838\u521d\u59cb\u5316\uff0c\u7136\u540e\u8c03\u7528\u5e94\u7528\u7a0b\u5e8f\u7684main()\u51fd\u6570(\u5982\u679c\u6709\u5b9a\u4e49)\u3002"),(0,a.kt)("p",null,"By default, the main thread uses the highest configured preemptible thread priority (i.e. 0). If the kernel is not configured to support preemptible threads, the main thread uses the lowest configured cooperative thread priority (i.e. -1)."),(0,a.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e3b\u7ebf\u7a0b\u914d\u7f6e\u4e3a\u6700\u9ad8\u7684\u53ef\u62a2\u5360\u7ebf\u7a0b\u4f18\u5148\u7ea7(\u53730)\u3002\u5982\u679c\u5185\u6838\u6ca1\u6709\u914d\u7f6e\u652f\u6301\u53ef\u62a2\u5360\u7ebf\u7a0b\uff0c\u4e3b\u7ebf\u7a0b\u914d\u7f6e\u4e3a\u6700\u4f4e\u7684\u534f\u4f5c\u7ebf\u7a0b\u4f18\u5148\u7ea7(\u5373-1)\u3002"),(0,a.kt)("p",null,"The main thread is an essential thread while it is performing kernel initialization or executing the application\u2019s main() function; this means a fatal system error is raised if the thread aborts. If main() is not defined, or if it executes and then does a normal return, the main thread terminates normally and no error is raised."),(0,a.kt)("p",null,"\u4e3b\u7ebf\u7a0b(main thread)\u5728\u6267\u884c\u5185\u6838\u521d\u59cb\u5316\u6216\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"main()"),"\u51fd\u6570\u65f6\u662f\u4e00\u4e2a\u57fa\u672c\u7ebf\u7a0b\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u8be5\u7ebf\u7a0b\u4e2d\u6b62(abort)\uff0c\u4f1a\u5f15\u53d1\u4e00\u4e2a\u81f4\u547d\u7684\u7cfb\u7edf\u9519\u8bef\u3002\u5982\u679c",(0,a.kt)("inlineCode",{parentName:"p"},"main()"),"\u6ca1\u6709\u88ab\u5b9a\u4e49\uff0c\u6216\u8005\u5b83\u6267\u884c\u540e\u505a\u4e86\u4e00\u4e2a\u6b63\u5e38\u7684\u8fd4\u56de\uff0c\u90a3\u4e48\u4e3b\u7ebf\u7a0b\u5c31\u4f1a\u6b63\u5e38\u7ed3\u675f\uff0c\u4e0d\u4f1a\u5f15\u53d1\u9519\u8bef\u3002"),(0,a.kt)("h3",{id:"idle-thread-\u7a7a\u95f2\u7ebf\u7a0b"},"Idle thread \u7a7a\u95f2\u7ebf\u7a0b"),(0,a.kt)("p",null,"This thread executes when there is no other work for the system to do. If possible, the idle thread activates the board\u2019s power management support to save power; otherwise, the idle thread simply performs a \u201cdo nothing\u201d loop. The idle thread remains in existence as long as the system is running and never terminates."),(0,a.kt)("p",null,"\u5f53\u7cfb\u7edf\u4e2d\u65e0\u5176\u4ed6\u5c31\u7eea\u7ebf\u7a0b\u5b58\u5728\u65f6\uff0c\u4f1a\u6267\u884c\u7a7a\u95f2\u7ebf\u7a0b(idle thread)\u3002\u53ef\u4ee5\u5728\u7a7a\u95f2\u7ebf\u7a0b\u4e2d\u6267\u884c\u7535\u6e90\u7ba1\u7406\u6a21\u5757\u4ee5\u7701\u7535\uff0c\u5426\u5219\u7a7a\u95f2\u7ebf\u7a0b\u53ea\u4f1a\u6267\u884c\u4e00\u4e2a\u201c\u4ec0\u4e48\u90fd\u4e0d\u505a\u201d\u7684\u5faa\u73af\u3002\u53ea\u8981\u7cfb\u7edf\u5728\u8fd0\u884c\uff0c\u7a7a\u95f2\u7ebf\u7a0b\u5c31\u4e00\u76f4\u5b58\u5728\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u7ed3\u675f\u3002"),(0,a.kt)("p",null,"The idle thread always uses the lowest configured thread priority. If this makes it a cooperative thread, the idle thread repeatedly yields the CPU to allow the application\u2019s other threads to run when they need to."),(0,a.kt)("p",null,"\u7a7a\u95f2\u7ebf\u7a0b\u6c38\u8fdc\u914d\u7f6e\u4e3a\u6700\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u3002\u5982\u679c\u8fd9\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u534f\u4f5c\u5f0f\u7ebf\u7a0b\uff0c\u90a3\u4e48\u7a7a\u95f2\u7ebf\u7a0b\u4f1a\u53cd\u590d\u8ba9\u51faCPU\uff0c\u4ee5\u4f7f\u5e94\u7528\u7a0b\u5e8f\u7684\u5176\u4ed6\u7ebf\u7a0b\u5728\u9700\u8981\u7684\u65f6\u5019\u8fd0\u884c\u3002"),(0,a.kt)("p",null,"The idle thread is an essential thread, which means a fatal system error is raised if the thread aborts."),(0,a.kt)("p",null,"\u7a7a\u95f2\u7ebf\u7a0b\u662f\u4e00\u4e2a\u5fc5\u4e0d\u53ef\u5c11\u7684\u7ebf\u7a0b\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u7ebf\u7a0b\u4e2d\u6b62\uff0c\u4f1a\u5f15\u53d1\u4e00\u4e2a\u81f4\u547d\u7684\u7cfb\u7edf\u9519\u8bef\u3002"),(0,a.kt)("p",null,"Additional system threads may also be spawned, depending on the kernel and board configuration options specified by the application. For example, enabling the system workqueue spawns a system thread that services the work items submitted to it. (See Workqueue Threads.)"),(0,a.kt)("p",null,"\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u548c\u5185\u6838\u7684\u914d\u7f6e\uff0c\u4e5f\u4f1a\u521b\u5efa\u5176\u4ed6\u7684\u7cfb\u7edf\u7ebf\u7a0b\u3002\u6bd4\u5982\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u7cfb\u7edf\u5de5\u4f5c\u961f\u5217(system workqueue)\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u7cfb\u7edf\u7ebf\u7a0b\u7528\u4e8e\u6267\u884c\u5de5\u4f5c\u9879(work items)\u3002"))}p.isMDXComponent=!0}}]);