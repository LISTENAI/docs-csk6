(self.webpackChunkls_docs_web=self.webpackChunkls_docs_web||[]).push([[6970],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return f}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),k=o(n),f=r,N=k["".concat(p,".").concat(f)]||k[f]||s[f]||i;return n?a.createElement(N,l(l({ref:t},m),{},{components:n})):a.createElement(N,l({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=k;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},82987:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return o},toc:function(){return m},default:function(){return k}});var a=n(22122),r=n(19756),i=(n(67294),n(3905)),l=["components"],d={},p=void 0,o={unversionedId:"tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle",id:"tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle",isDocsHomePage:!1,title:"fs.promises.filehandle",description:"@listenai/lisa_core / Exports / fs / promises / FileHandle",source:"@site/docs/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle.md",sourceDirName:"tools/LISA_LPM/development/API/interfaces",slug:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle",permalink:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle",version:"current",frontMatter:{},sidebar:"toolsLISA",previous:{title:"fs.pathentrystream",permalink:"/tools/LISA_LPM/development/API/interfaces/fs.pathentrystream"},next:{title:"fs.readoptions",permalink:"/tools/LISA_LPM/development/API/interfaces/fs.readoptions"}},m=[{value:"Table of contents",id:"table-of-contents",children:[{value:"Properties",id:"properties",children:[]},{value:"Methods",id:"methods",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"fd",id:"fd",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"appendFile",id:"appendfile",children:[]},{value:"chmod",id:"chmod",children:[]},{value:"chown",id:"chown",children:[]},{value:"close",id:"close",children:[]},{value:"datasync",id:"datasync",children:[]},{value:"read",id:"read",children:[]},{value:"readFile",id:"readfile",children:[]},{value:"readv",id:"readv",children:[]},{value:"stat",id:"stat",children:[]},{value:"sync",id:"sync",children:[]},{value:"truncate",id:"truncate",children:[]},{value:"utimes",id:"utimes",children:[]},{value:"write",id:"write",children:[]},{value:"writeFile",id:"writefile",children:[]},{value:"writev",id:"writev",children:[]}]}],s={toc:m};function k(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/README"},"@listenai/lisa_core")," / ",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/modules"},"Exports")," / ",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/modules/fs"},"fs")," / ",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/modules/fs.promises"},"promises")," / FileHandle"),(0,i.kt)("h1",{id:"interface-filehandle"},"Interface: FileHandle"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/modules/fs"},"fs"),".",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/modules/fs.promises"},"promises"),".FileHandle"),(0,i.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#fd"},"fd"))),(0,i.kt)("h3",{id:"methods"},"Methods"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#appendfile"},"appendFile")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#chmod"},"chmod")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#chown"},"chown")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#close"},"close")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#datasync"},"datasync")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#read"},"read")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#readfile"},"readFile")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#readv"},"readv")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#stat"},"stat")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#sync"},"sync")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#truncate"},"truncate")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#utimes"},"utimes")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#write"},"write")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#writefile"},"writeFile")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/tools/LISA_LPM/development/API/interfaces/fs.promises.filehandle#writev"},"writev"))),(0,i.kt)("h2",{id:"properties-1"},"Properties"),(0,i.kt)("h3",{id:"fd"},"fd"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"fd"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the file descriptor for this file handle."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:29"),(0,i.kt)("h2",{id:"methods-1"},"Methods"),(0,i.kt)("h3",{id:"appendfile"},"appendFile"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"appendFile"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Asynchronously append data to a file, creating the file if it does not exist. The underlying file will ",(0,i.kt)("em",{parentName:"p"},"not")," be closed automatically.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"FileHandle")," must have been opened for appending."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Uint8Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The data to write. If something other than a ",(0,i.kt)("inlineCode",{parentName:"td"},"Buffer")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"Uint8Array")," is provided, the value is coerced to a string.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"BufferEncoding")," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/interfaces/fs.baseencodingoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"BaseEncodingOptions"))," & { ",(0,i.kt)("inlineCode",{parentName:"td"},"flag?"),": ",(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/modules/fs#openmode"},(0,i.kt)("inlineCode",{parentName:"a"},"OpenMode"))," ; ",(0,i.kt)("inlineCode",{parentName:"td"},"mode?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"Mode"),"  }"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Either the encoding for the file, or an object optionally specifying the encoding, file mode, and flag. If ",(0,i.kt)("inlineCode",{parentName:"td"},"encoding")," is not supplied, the default of ",(0,i.kt)("inlineCode",{parentName:"td"},"'utf8'")," is used. If ",(0,i.kt)("inlineCode",{parentName:"td"},"mode")," is not supplied, the default of ",(0,i.kt)("inlineCode",{parentName:"td"},"0o666")," is used. If ",(0,i.kt)("inlineCode",{parentName:"td"},"mode")," is a string, it is parsed as an octal integer. If ",(0,i.kt)("inlineCode",{parentName:"td"},"flag")," is not supplied, the default of ",(0,i.kt)("inlineCode",{parentName:"td"},"'a'")," is used.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:41"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"chmod"},"chmod"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"chmod"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"mode"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Asynchronous fchmod(2) - Change permissions of a file."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mode")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Mode")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A file mode. If a string is passed, it is parsed as an octal integer.")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:52"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"chown"},"chown"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"chown"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"uid"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"gid"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Asynchronous fchown(2) - Change ownership of a file."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"uid")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"gid")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:46"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"close"},"close"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"close"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Asynchronous close(2) - close a ",(0,i.kt)("inlineCode",{parentName:"p"},"FileHandle"),"."),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:165"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"datasync"},"datasync"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"datasync"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Asynchronous fdatasync(2) - synchronize a file's in-core state with storage device."),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:57"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"read"},"read"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"read"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"TBuffer"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"buffer"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"offset?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"length?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"position?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Object"),">"),(0,i.kt)("p",null,"Asynchronously reads data from the file.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"FileHandle")," must have been opened for reading."),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TBuffer")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"Uint8Array"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"TBuffer"),">")))),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"buffer")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TBuffer")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The buffer that the data will be written to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"offset?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The offset in the buffer at which to start writing.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"length?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The number of bytes to read.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"position?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The offset from the beginning of the file from which data should be read. If ",(0,i.kt)("inlineCode",{parentName:"td"},"null"),", data will be read from the current position.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Object"),">"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:72"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"readfile"},"readFile"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"readFile"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),">"),(0,i.kt)("p",null,"Asynchronously reads the entire contents of a file. The underlying file will ",(0,i.kt)("em",{parentName:"p"},"not")," be closed automatically.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"FileHandle")," must have been opened for reading."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," { ",(0,i.kt)("inlineCode",{parentName:"td"},"encoding?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"null")," ; ",(0,i.kt)("inlineCode",{parentName:"td"},"flag?"),": ",(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/modules/fs#openmode"},(0,i.kt)("inlineCode",{parentName:"a"},"OpenMode")),"  }"),(0,i.kt)("td",{parentName:"tr",align:"left"},"An object that may contain an optional flag. If a flag is not provided, it defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"'r'"),".")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),">"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:80"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"readFile"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"options"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,i.kt)("p",null,"Asynchronously reads the entire contents of a file. The underlying file will ",(0,i.kt)("em",{parentName:"p"},"not")," be closed automatically.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"FileHandle")," must have been opened for reading."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"BufferEncoding")," ","|"," { ",(0,i.kt)("inlineCode",{parentName:"td"},"encoding"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"BufferEncoding")," ; ",(0,i.kt)("inlineCode",{parentName:"td"},"flag?"),": ",(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/modules/fs#openmode"},(0,i.kt)("inlineCode",{parentName:"a"},"OpenMode")),"  }"),(0,i.kt)("td",{parentName:"tr",align:"left"},"An object that may contain an optional flag. If a flag is not provided, it defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"'r'"),".")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:88"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"readFile"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),">"),(0,i.kt)("p",null,"Asynchronously reads the entire contents of a file. The underlying file will ",(0,i.kt)("em",{parentName:"p"},"not")," be closed automatically.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"FileHandle")," must have been opened for reading."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"BufferEncoding")," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/interfaces/fs.baseencodingoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"BaseEncodingOptions"))," & { ",(0,i.kt)("inlineCode",{parentName:"td"},"flag?"),": ",(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/modules/fs#openmode"},(0,i.kt)("inlineCode",{parentName:"a"},"OpenMode")),"  }"),(0,i.kt)("td",{parentName:"tr",align:"left"},"An object that may contain an optional flag. If a flag is not provided, it defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"'r'"),".")))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),">"),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:96"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"readv"},"readv"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"readv"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"buffers"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"position?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/interfaces/fs.readvresult"},(0,i.kt)("inlineCode",{parentName:"a"},"ReadVResult")),">"),(0,i.kt)("p",null,"See ",(0,i.kt)("inlineCode",{parentName:"p"},"fs.readv")," promisified version."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"buffers")),(0,i.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,i.kt)("inlineCode",{parentName:"td"},"ArrayBufferView"),"[]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"position?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/interfaces/fs.readvresult"},(0,i.kt)("inlineCode",{parentName:"a"},"ReadVResult")),">"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:160"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"stat"},"stat"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"stat"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/classes/fs.stats"},(0,i.kt)("inlineCode",{parentName:"a"},"Stats")),">"),(0,i.kt)("p",null,"Asynchronous fstat(2) - Get file status."),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"opts?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/interfaces/fs.statoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"StatOptions"))," & { ",(0,i.kt)("inlineCode",{parentName:"td"},"bigint?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),"  }")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/classes/fs.stats"},(0,i.kt)("inlineCode",{parentName:"a"},"Stats")),">"),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:101"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"stat"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"opts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/classes/fs.bigintstats"},(0,i.kt)("inlineCode",{parentName:"a"},"BigIntStats")),">"),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"opts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/interfaces/fs.statoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"StatOptions"))," & { ",(0,i.kt)("inlineCode",{parentName:"td"},"bigint"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),"  }")))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/classes/fs.bigintstats"},(0,i.kt)("inlineCode",{parentName:"a"},"BigIntStats")),">"),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:102"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"stat"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/classes/fs.stats"},(0,i.kt)("inlineCode",{parentName:"a"},"Stats"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/classes/fs.bigintstats"},(0,i.kt)("inlineCode",{parentName:"a"},"BigIntStats")),">"),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"opts?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/interfaces/fs.statoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"StatOptions")))))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/classes/fs.stats"},(0,i.kt)("inlineCode",{parentName:"a"},"Stats"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/classes/fs.bigintstats"},(0,i.kt)("inlineCode",{parentName:"a"},"BigIntStats")),">"),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:103"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"sync"},"sync"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"sync"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Asynchronous fsync(2) - synchronize a file's in-core state with the underlying storage device."),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:62"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"truncate"},"truncate"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"truncate"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"len?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Asynchronous ftruncate(2) - Truncate a file to a specified length."),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"len?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"If not specified, defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"0"),".")))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:109"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"utimes"},"utimes"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"utimes"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"atime"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"mtime"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Asynchronously change file timestamps of the file."),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"atime")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Date")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The last access time. If a string is provided, it will be coerced to number.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"mtime")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Date")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The last modified time. If a string is provided, it will be coerced to number.")))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:116"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"write"},"write"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"write"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"TBuffer"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"buffer"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"offset?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"length?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"position?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Object"),">"),(0,i.kt)("p",null,"Asynchronously writes ",(0,i.kt)("inlineCode",{parentName:"p"},"buffer")," to the file.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"FileHandle")," must have been opened for writing."),(0,i.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TBuffer")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"Uint8Array"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"TBuffer"),">")))),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"buffer")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TBuffer")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The buffer that the data will be written to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"offset?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The part of the buffer to be written. If not supplied, defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"0"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"length?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The number of bytes to write. If not supplied, defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"buffer.length - offset"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"position?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.")))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Object"),">"),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:126"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"write"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"position?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"encoding?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Object"),">"),(0,i.kt)("p",null,"Asynchronously writes ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," to the file.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"FileHandle")," must have been opened for writing.\nIt is unsafe to call ",(0,i.kt)("inlineCode",{parentName:"p"},"write()")," multiple times on the same file without waiting for the ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"\nto be resolved (or rejected). For this scenario, ",(0,i.kt)("inlineCode",{parentName:"p"},"fs.createWriteStream")," is strongly recommended."),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Uint8Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"position?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"encoding?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"BufferEncoding")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The expected string encoding.")))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Object"),">"),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:137"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"writefile"},"writeFile"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"writeFile"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("p",null,"Asynchronously writes data to a file, replacing the file if it already exists. The underlying file will ",(0,i.kt)("em",{parentName:"p"},"not")," be closed automatically.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"FileHandle")," must have been opened for writing.\nIt is unsafe to call ",(0,i.kt)("inlineCode",{parentName:"p"},"writeFile()")," multiple times on the same file without waiting for the ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise")," to be resolved (or rejected)."),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Uint8Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The data to write. If something other than a ",(0,i.kt)("inlineCode",{parentName:"td"},"Buffer")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"Uint8Array")," is provided, the value is coerced to a string.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"BufferEncoding")," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/interfaces/fs.baseencodingoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"BaseEncodingOptions"))," & { ",(0,i.kt)("inlineCode",{parentName:"td"},"flag?"),": ",(0,i.kt)("a",{parentName:"td",href:"/tools/LISA_LPM/development/API/modules/fs#openmode"},(0,i.kt)("inlineCode",{parentName:"a"},"OpenMode"))," ; ",(0,i.kt)("inlineCode",{parentName:"td"},"mode?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"Mode"),"  }"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Either the encoding for the file, or an object optionally specifying the encoding, file mode, and flag. If ",(0,i.kt)("inlineCode",{parentName:"td"},"encoding")," is not supplied, the default of ",(0,i.kt)("inlineCode",{parentName:"td"},"'utf8'")," is used. If ",(0,i.kt)("inlineCode",{parentName:"td"},"mode")," is not supplied, the default of ",(0,i.kt)("inlineCode",{parentName:"td"},"0o666")," is used. If ",(0,i.kt)("inlineCode",{parentName:"td"},"mode")," is a string, it is parsed as an octal integer. If ",(0,i.kt)("inlineCode",{parentName:"td"},"flag")," is not supplied, the default of ",(0,i.kt)("inlineCode",{parentName:"td"},"'w'")," is used.")))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:150"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"writev"},"writev"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"writev"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"buffers"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"position?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/interfaces/fs.writevresult"},(0,i.kt)("inlineCode",{parentName:"a"},"WriteVResult")),">"),(0,i.kt)("p",null,"See ",(0,i.kt)("inlineCode",{parentName:"p"},"fs.writev")," promisified version."),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"buffers")),(0,i.kt)("td",{parentName:"tr",align:"left"},"readonly ",(0,i.kt)("inlineCode",{parentName:"td"},"ArrayBufferView"),"[]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"position?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"/tools/LISA_LPM/development/API/interfaces/fs.writevresult"},(0,i.kt)("inlineCode",{parentName:"a"},"WriteVResult")),">"),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,"node_modules/@types/node/fs/promises.d.ts:155"))}k.isMDXComponent=!0}}]);