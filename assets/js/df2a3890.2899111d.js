"use strict";(self.webpackChunkls_docs_web=self.webpackChunkls_docs_web||[]).push([[5617],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>s});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=t.createContext({}),m=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},c=function(e){var n=m(e.components);return t.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=m(r),s=a,_=p["".concat(u,".").concat(s)]||p[s]||d[s]||l;return r?t.createElement(_,i(i({ref:n},c),{},{components:r})):t.createElement(_,i({ref:n},c))}));function s(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=p;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var m=2;m<l;m++)i[m]=r[m];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},442:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var t=r(87462),a=(r(67294),r(3905));const l={sidebar_label:"\u91cf\u5316\u8bad\u7ec3",sidebar_position:3},i="\u91cf\u5316\u8bad\u7ec3",o={unversionedId:"AIEcology/Linger/Training_Framework/train_quant",id:"AIEcology/Linger/Training_Framework/train_quant",isDocsHomePage:!1,title:"\u91cf\u5316\u8bad\u7ec3",description:"\u91cf\u5316\u8bad\u7ec3\u76ee\u6807",source:"@site/docs/AIEcology/Linger/Training_Framework/train_quant.md",sourceDirName:"AIEcology/Linger/Training_Framework",slug:"/AIEcology/Linger/Training_Framework/train_quant",permalink:"/docs-csk6/AIEcology/Linger/Training_Framework/train_quant",version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"\u91cf\u5316\u8bad\u7ec3",sidebar_position:3},sidebar:"AIEcologyLinger",previous:{title:"clamp\u8bad\u7ec3",permalink:"/docs-csk6/AIEcology/Linger/Training_Framework/train_clamp"},next:{title:"\u7b97\u5b50\u5217\u8868",permalink:"/docs-csk6/AIEcology/Linger/Training_Framework/operator"}},u=[{value:"1.\u76f4\u63a5\u539f\u59cb\u6d6e\u70b9\u7f51\u7edc\u8f6c\u5b9a\u70b9\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3",id:"1\u76f4\u63a5\u539f\u59cb\u6d6e\u70b9\u7f51\u7edc\u8f6c\u5b9a\u70b9\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3",children:[]},{value:"2.Normalize\u6d6e\u70b9\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3\u4e4b\u540e\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc",id:"2normalize\u6d6e\u70b9\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3\u4e4b\u540e\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc",children:[]},{value:"3.Normalize\u6d6e\u70b9\u7f51\u7edc\u4e0d\u8fdb\u884c\u8bad\u7ec3\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc",id:"3normalize\u6d6e\u70b9\u7f51\u7edc\u4e0d\u8fdb\u884c\u8bad\u7ec3\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc",children:[]}],m={toc:u};function c(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u91cf\u5316\u8bad\u7ec3"},"\u91cf\u5316\u8bad\u7ec3"),(0,a.kt)("p",null,"\u91cf\u5316\u8bad\u7ec3\u76ee\u6807"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5bf9\u6807\u76ee\u6807\u5e73\u53f0\uff0c\u5373\u8fdb\u884c\u76ee\u6807\u5e73\u53f0\u7684op\u9002\u914d"),(0,a.kt)("li",{parentName:"ul"},"\u8fdb\u884c\u57fa\u4e8e\u8bad\u7ec3\u7684\u91cf\u5316\u8bad\u7ec3"),(0,a.kt)("li",{parentName:"ul"},"\u5bfc\u51fa\u89c4\u8303\u7684onnx\u6a21\u578b")),(0,a.kt)("h2",{id:"1\u76f4\u63a5\u539f\u59cb\u6d6e\u70b9\u7f51\u7edc\u8f6c\u5b9a\u70b9\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3"},"1.\u76f4\u63a5\u539f\u59cb\u6d6e\u70b9\u7f51\u7edc\u8f6c\u5b9a\u70b9\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u539f\u59cb\u7f51\u7edc\u5b9a\u4e49\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  class Net(nn.Module):\n      def __init__(self):\n          super(Net, self).__init__()\n          self.conv = nn.Conv2d(10, 10, kernel_size=3, stride=1,\n                       padding=1, bias=True)\n          self.bn = nn.BatchNorm2d(10)\n          self.relu = nn.ReLU()\n          self.fc = nn.Linear(250, 100)\n      def forward(self, x):\n          x = self.conv(x)\n          x = self.bn(x)\n          x = self.relu(x)\n          n, c, h, w = x.shape\n          x = x.view((n, c*h*w))  \n          x = self.fc(x)\n          return x\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u878d\u5408BN\u64cd\u4f5c")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"linger.trace_layers(net, net, aa, fuse_bn = True) #aa\u4e3a\u7f51\u7edcforwward\u7684\u8f93\u5165\uff0c\u6b64\u5904\u4e3b\u8981\u662ftrace\u6574\u4f53\u7684\u7f51\u7edc\u7ed3\u6784(trace\u7684\u4f5c\u7528\u53c2\u8003pytorch\u6587\u6863)\uff0c\u7528\u4ee5\u66ff\u6362Conv-BN\u5bf9\u4e3anormalizeConvBN2d\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u878d\u5408\u4e4b\u540e\u7684\u7f51\u7edc\u7ed3\u6784")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Net(\n  (conv): NormalizeConvBN2d(\n    normalize_data:None,normalize_weight:None,normalize_bias:None,ahead_relu:True\n    (conv): Conv2d(10, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (bn): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n  (bn): EmptyBatchNorm()\n  (relu): ReLU()\n  (fc): Linear(in_features=25000, out_features=100, bias=True)\n)\n\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6240\u6709\u7684Conv-BN\u7ed3\u6784\u53d8\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684NormalizeConvBN2d\u7ed3\u6784\uff0c\u65b9\u4fbf\u505a\u6d6e\u70b9normalize\u65f6\u8fdb\u884c\u7ea6\u675f\u5904\u7406"),(0,a.kt)("li",{parentName:"ul"},"\u91c7\u7528linger.init\u8fdb\u884c\u5b9a\u70b9OP\u8f6c\u6362\uff0c\u53ef\u81ea\u5b9a\u4e49\u91cf\u5316OP")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"replace_tuple = (nn.Conv2d, linger.NormalizeConvBN2d, nn.Linear) \nnet = linger.init(net, quant_modules=replace_module)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e5f\u53ef\u4ee5\u91c7\u7528\u9ed8\u8ba4\u8bbe\u7f6e")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"net = linger.init(net)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u91cf\u5316\u5b8c\u6210\u4e4b\u540e\u7684\u6a21\u578b\u4e3a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Net(\n  (conv): Conv2dInt(10, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n  (bn): EmptyBatchNorm()\n  (relu): ReLU()\n  (fc): LinearInt(in_features=25000, out_features=100, bias=True)\n)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u52a0\u8f7d\u53c2\u6570\u4e0e\u539f\u59cb\u6d6e\u70b9\u7f51\u7edc\u52a0\u8f7d\u53c2\u6570\u65b9\u5f0f\u4e00\u81f4\uff0c\u5fc5\u987b\u5728\u5b9a\u70b9init\u4e4b\u540e\u8fdb\u884c\u52a0\u8f7d")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"net.load_state_dict(torch.load('data.ignore/convbn_quant.pt'))\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5b9a\u70b9\u5316module\u51c6\u5907\u5b8c\u6210\u4e4b\u540e\u5373\u53ef\u505a\u540e\u7eed\u7684finetune\u8bad\u7ec3\uff0c\u4e0e\u6807\u51c6\u7684\u6d6e\u70b9\u8bad\u7ec3\u65e0\u4efb\u4f55\u4e0d\u540c\uff0c\u8bad\u7ec3\u5b8c\u6210\u5bfc\u51faonnx\u5b58\u50a8\u7684\u53c2\u6570\u5747\u662f\u5b9a\u70b9\u53c2\u6570")),(0,a.kt)("h2",{id:"2normalize\u6d6e\u70b9\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3\u4e4b\u540e\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc"},"2.Normalize\u6d6e\u70b9\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3\u4e4b\u540e\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc"),(0,a.kt)("p",null," \u7528\u4ee5\u89e3\u51b3\u76f4\u63a5\u5b9a\u70b9\u91cf\u5316\u8bad\u7ec3\u6548\u679c\u8f83\u5dee\uff0c\u9700\u8981\u5148\u5bf9\u6d6e\u70b9\u7684\u8f93\u51fa\u8fdb\u884cNormalize\u7ea6\u675f,\u4f7f\u5176\u9488\u5bf9\u5b9a\u70b9\u5316\u66f4\u52a0\u53cb\u597d"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u524d\u9762\u7ecf\u8fc7\u53cc\u9636\u6bb5\u6559\u7a0b\u4ecb\u7ecd\u4e86\u5982\u4f55\u8f6c\u6362\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u7f51\u7edc\uff0c\u76f8\u6bd4\u4e8e\u76f4\u63a5\u7531\u539f\u59cb\u6d6e\u70b9\u8f6cint\uff0cnormalize\u6d6e\u70b9\u8f6c\u5b9a\u70b9\u589e\u52a0\u4e86\u4e00\u4e9bnormalize\u7684\u8bbe\u7f6e"),(0,a.kt)("li",{parentName:"ul"},"disable_normalize\u7528\u4e8e\u652f\u6301\u7279\u5b9a\u5c42\u4e0d\u505anormalize, normalize_module\u652f\u6301\u7279\u5b9a\u5c42\u4e0d\u540cnormalize \u5927\u5c0f\uff0c \u521d\u59cb\u5316\u4e4b\u540e\u8fdb\u884c\u52a0\u8f7d\u6743\u91cd\u4e4b\u540e\u65e2\u53ef\u4ee5\u505anormalize\u6d6e\u70b9\u8bad\u7ec3. normalize_layers\u7528\u4e8e\u66ff\u6362\u6240\u6709module\u5230NormalizeModule\u8fdb\u884c\u540e\u7eed\u7684\u8bad\u7ec3")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    linger.disable_normalize(net.fc)\n    linger.trace_layers(net, net, aa)\n    normalize_modules = (nn.Conv2d, nn.Linear, nn.BatchNorm2d, linger.NormalizeConvBN2d)\n    net = linger.normalize_layers(net, normalize_modules=normalize_modules, normalize_weight_value=8, normalize_bias_value=8, normalize_output_value=8)\n    net.load_state_dict(torch.load('data.ignore/convbn_float.pt'))\n    net.cuda()\n    #train process\n    out2 = net(aa)\n    torch.save(net.state_dict(), 'data.ignore/convbn_normalize.pt')\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"normalize\u4e4b\u540e\u7684\u7f51\u7edc")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Net(\n  (conv): NormalizeConvBN2d(\n    normalize_data:8,normalize_weight:8,normalize_bias:8,ahead_relu:True\n    (conv): Conv2d(10, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (bn): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n  (bn): EmptyBatchNorm()\n  (relu): ReLU()\n  (fc): Linear(in_features=25000, out_features=100, bias=True)\n)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Normalize\u4e4b\u540e\u5373\u53ef\u8fdb\u884c\u6d6e\u70b9\u8bad\u7ec3\uff0c\u6539\u53d8\u6574\u4f53\u7684\u6d6e\u70b9\u8f93\u51fa\u5206\u5e03\u7528\u4e8e\u540e\u7eed\u5b9a\u70b9\u5316\u8bad\u7ec3\uff0c\u8bad\u7ec3\u4f4d\u7f6e\u53c2\u800388\u884c\uff0c\u8bad\u7ec3\u5b8c\u4e4b\u540e\u5b58\u50a8normalize\u4e4b\u540e\u7684\u6a21\u578b\u7528\u4e8e\u540e\u7eed\u7684\u5b9a\u70b9\u8bad\u7ec3")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"normalize module \u8bad\u7ec3\u5b8c\u6210\u4e4b\u540e\u8fdb\u5165\u5b9a\u70b9\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u6ce8\u610f\uff0c\u6b64\u5904\u6d6e\u70b9\u8bad\u7ec3\u5b8c\u4fdd\u5b58\u4e86normalizeModule\u7684\u6743\u91cd\uff0c\u5b9a\u70b9\u6a21\u578b\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\u6b64\u5904\u7684\u6743\u91cd\uff0cmodel.state_dict\u4e2d\u662f\u5e26\u6709conv.conv\u4e0econv.bn \u524d\u7f00\u7684")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u4e00\u822c\u6765\u8bf4\u7b2c\u4e8c\u9636\u6bb5\u91cf\u5316\u5b9a\u70b9\u8bad\u7ec3\uff0c\u7ee7\u627f\u4e0a\u4e00\u9636\u6bb5\u6d6e\u70b9normalize\u7684\u6240\u6709\u8bbe\u7f6e\uff0c\u52a0\u8f7d\u4fdd\u5b58\u7684\u6d6e\u70b9normalize checkpoint\u540e\u5f00\u59cb\u8bad\u7ec3\uff0c\u6ce8\u610f\u6b64\u5904\u8bbe\u7f6e\u7684quant_modules\u8981\u4e0e\u4e0a\u4e00\u9636\u6bb5\u7684normalize_modules\u5bf9\u5e94\uff0cdisable_normalize\u548c\u7b2cdisable_quant\u5bf9\u5e94**"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    linger.disable_normalize(net.fc)\n    linger.trace_layers(net, net, aa)\n    normalize_modules = (nn.Conv2d, nn.Linear, nn.BatchNorm2d, linger.NormalizeConvBN2d)\n    net = linger.normalize_layers(net, normalize_modules=normalize_modules, normalize_weight_value=8, normalize_bias_value=8, normalize_output_value=8)\n    linger.disable_quant(net.fc)\n    net = linger.init(net)\n    net.load_state_dict(torch.load('data.ignore/convbn_normalize.pt'))\n    net.cuda()\n    out3 = net(aa)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5b9a\u70b9\u4e4b\u540e\u7684\u7f51\u7edc\u53d8\u6362\u4e3a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Net(\n  (conv): Conv2dInt(10, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n  (bn): EmptyBatchNorm()\n  (relu): ReLU()\n  (fc): Linear(in_features=25000, out_features=100, bias=True)\n)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Net(\n  (conv): Conv2dInt(10, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n  (bn): EmptyBatchNorm()\n  (relu): ReLU()\n  (fc): Linear(in_features=25000, out_features=100, bias=True)\n)\n(Pdb) net.conv.normalize_data\n8\n(Pdb) net.conv.normalize_weight\n8\n(Pdb) net.conv.normalize_bias  \n8\n")),(0,a.kt)("h2",{id:"3normalize\u6d6e\u70b9\u7f51\u7edc\u4e0d\u8fdb\u884c\u8bad\u7ec3\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc"},"3.Normalize\u6d6e\u70b9\u7f51\u7edc\u4e0d\u8fdb\u884c\u8bad\u7ec3\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc"),(0,a.kt)("p",null,"\u53ea\u4f5c\u4e3a\u4e0d\u540c\u5c42\u8bbe\u7f6e\u4e0d\u540cnormalize\u5927\u5c0f\u7684\u4e2d\u95f4\u8f6c\u6362"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    linger.disable_normalize(net.fc)\n    linger.trace_layers(net, net, aa)\n    normalize_modules = (nn.Conv2d, nn.Linear, nn.BatchNorm2d)\n    net = linger.normalize_layers(net, normalize_modules=normalize_modules, normalize_weight_value=8, normalize_bias_value=8, normalize_output_value=8)\n    linger.disable_quant(net.fc)\n    net = linger.init(net)\n    net.load_state_dict(torch.load('data.ignore/convbn_normalize.pt'))\n    net.cuda()\n    out3 = net(aa)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"normalize_layers\u4e0einit\u4e4b\u95f4\u6ca1\u6709save_state_dict\u64cd\u4f5c\uff0c\u53ea\u652f\u6301\u5728init\u4e4b\u540e\u8fdb\u884c\u4e00\u6b21load_state_dict\u64cd\u4f5c")))}c.isMDXComponent=!0}}]);