"use strict";(self.webpackChunkls_docs_web=self.webpackChunkls_docs_web||[]).push([[1840],{3905:(e,n,a)=>{a.d(n,{Zo:()=>l,kt:()=>m});var t=a(67294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function d(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=t.createContext({}),s=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):d(d({},n),e)),a},l=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},_=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),_=s(a),m=i,h=_["".concat(p,".").concat(m)]||_[m]||c[m]||r;return a?t.createElement(h,d(d({ref:n},l),{},{components:a})):t.createElement(h,d({ref:n},l))}));function m(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,d=new Array(r);d[0]=_;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,d[1]=o;for(var s=2;s<r;s++)d[s]=a[s];return t.createElement.apply(null,d)}return t.createElement.apply(null,a)}_.displayName="MDXCreateElement"},86344:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>d,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var t=a(87462),i=(a(67294),a(3905));const r={},d="\u5728 C/C++ \u4e2d\u8bbf\u95ee\u8bbe\u5907\u6811",o={unversionedId:"chips/600X/build/dts/api_usage",id:"chips/600X/build/dts/api_usage",isDocsHomePage:!1,title:"\u5728 C/C++ \u4e2d\u8bbf\u95ee\u8bbe\u5907\u6811",description:"\u672c\u6587\u63cf\u8ff0\u4e86 Zephyr \u7684 `` API\uff0c\u7528\u4e8e\u5728 C \u6e90\u7801\u4e2d\u8bfb\u53d6\u8bbe\u5907\u6811\u3002\u6211\u4eec\u5047\u8bbe\u4f60\u5df2\u719f\u6089 \u8bbe\u5907\u6811\u6982\u8ff0 \u548c \u8bbe\u5907\u6811\u7ed1\u5b9a \u4e2d\u7684\u6982\u5ff5\u3002\u5bf9\u5177\u4f53\u63a5\u53e3\u7684\u63cf\u8ff0\u53ef\u53c2\u9605 API \u5f15\u7528 \u3002",source:"@site/docs/chips/600X/build/dts/api_usage.md",sourceDirName:"chips/600X/build/dts",slug:"/chips/600X/build/dts/api_usage",permalink:"/docs-csk6/chips/600X/build/dts/api_usage",version:"current",frontMatter:{},sidebar:"docs/chips/600X",previous:{title:"\u8bbe\u5907\u6811\u64cd\u4f5c\u6307\u5f15",permalink:"/docs-csk6/chips/600X/build/dts/howtos"},next:{title:"\u95ee\u9898\u6392\u67e5",permalink:"/docs-csk6/chips/600X/build/dts/troubleshooting"}},p=[{value:"\u7ed9 Linux \u5f00\u53d1\u8005\u7684\u5c0f\u8d34\u58eb",id:"\u7ed9-linux-\u5f00\u53d1\u8005\u7684\u5c0f\u8d34\u58eb",children:[]},{value:"\u8282\u70b9 id",id:"\u8282\u70b9-id",children:[]},{value:"\u8282\u70b9 id \u5e76\u4e0d\u662f\u503c",id:"\u8282\u70b9-id-\u5e76\u4e0d\u662f\u503c",children:[]},{value:"\u8bbf\u95ee\u5c5e\u6027",id:"\u8bbf\u95ee\u5c5e\u6027",children:[{value:"\u68c0\u67e5\u5c5e\u6027\u4e0e\u5bf9\u5e94\u503c",id:"\u68c0\u67e5\u5c5e\u6027\u4e0e\u5bf9\u5e94\u503c",children:[]},{value:"\u7b80\u5355\u5c5e\u6027",id:"\u7b80\u5355\u5c5e\u6027",children:[]},{value:"reg \u5c5e\u6027",id:"reg-\u5c5e\u6027",children:[]},{value:"interrupts \u5c5e\u6027",id:"interrupts-\u5c5e\u6027",children:[]},{value:"phandle \u5c5e\u6027",id:"phandle-\u5c5e\u6027",children:[]}]},{value:"\u5176\u4ed6 API",id:"\u5176\u4ed6-api",children:[]},{value:"\u8bbe\u5907\u9a71\u52a8\u4fbf\u6377\u6027",id:"\u8bbe\u5907\u9a71\u52a8\u4fbf\u6377\u6027",children:[]},{value:"\u7279\u5b9a\u4e8e\u786c\u4ef6\u7684 API",id:"\u7279\u5b9a\u4e8e\u786c\u4ef6\u7684-api",children:[]},{value:"\u751f\u6210\u7684\u5b8f",id:"\u751f\u6210\u7684\u5b8f",children:[]}],s={toc:p};function l(e){let{components:n,...a}=e;return(0,i.kt)("wrapper",(0,t.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u5728-cc-\u4e2d\u8bbf\u95ee\u8bbe\u5907\u6811"},"\u5728 C/C++ \u4e2d\u8bbf\u95ee\u8bbe\u5907\u6811"),(0,i.kt)("p",null,"\u672c\u6587\u63cf\u8ff0\u4e86 Zephyr \u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"<devicetree.h>")," API\uff0c\u7528\u4e8e\u5728 C \u6e90\u7801\u4e2d\u8bfb\u53d6\u8bbe\u5907\u6811\u3002\u6211\u4eec\u5047\u8bbe\u4f60\u5df2\u719f\u6089 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/intro"},"\u8bbe\u5907\u6811\u6982\u8ff0")," \u548c ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/bindings"},"\u8bbe\u5907\u6811\u7ed1\u5b9a")," \u4e2d\u7684\u6982\u5ff5\u3002\u5bf9\u5177\u4f53\u63a5\u53e3\u7684\u63cf\u8ff0\u53ef\u53c2\u9605 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/index"},"API \u5f15\u7528")," \u3002"),(0,i.kt)("h2",{id:"\u7ed9-linux-\u5f00\u53d1\u8005\u7684\u5c0f\u8d34\u58eb"},"\u7ed9 Linux \u5f00\u53d1\u8005\u7684\u5c0f\u8d34\u58eb"),(0,i.kt)("p",null,"\u5bf9\u719f\u6089\u8bbe\u5907\u6811\u7684 Linux \u5f00\u53d1\u8005\u800c\u8a00\uff0c\u5e94\u8be5\u5f15\u8d77\u6ce8\u610f\uff0c\u6b64\u5904\u63cf\u8ff0\u7684 API \u4e0e\u5728 Linux \u4e0a\u4f7f\u7528\u8bbe\u5907\u6811\u7684\u65b9\u5f0f\u6709\u5f88\u5927\u4e0d\u540c\u3002"),(0,i.kt)("p",null,"\u5728 Zephyr \u4e2d\uff0c\u8bbe\u5907\u6811\u6240\u6709\u6570\u636e\u5305\u542b\u5728\u4e00\u4e2a\u751f\u6210\u7684 C \u5934\u6587\u4ef6\uff0c\u5e76\u4ee5\u5b8f API \u8fdb\u884c\u62bd\u8c61\u3002\u4f46 Linux \u5185\u6838\u4e2d\u662f\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8bfb\u53d6\u8bbe\u5907\u6811\u6570\u636e\u7ed3\u6784\u7684\u3002\u4e8c\u8fdb\u5236\u8868\u793a\u5728\u8fd0\u884c\u65f6\u88ab\u89e3\u6790\uff0c\u4f8b\u5982\u52a0\u8f7d\u548c\u521d\u59cb\u5316\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u3002"),(0,i.kt)("p",null,"Zephyr \u4e0d\u80fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5de5\u4f5c\uff0c\u56e0\u4e3a\u8bbe\u5907\u6811\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u76f8\u5173\u5904\u7406\u4ee3\u7801\u7684\u5360\u7528\u7a7a\u95f4\u592a\u5927\uff0c\u5e76\u4e0d\u9002\u7528\u4e8e\u5b89\u88c5\u5728 Zephyr \u652f\u6301\u7684\u3001\u6027\u80fd\u76f8\u5bf9\u53d7\u9650\u7684\u8bbe\u5907\u4e0a\u3002"),(0,i.kt)("h2",{id:"\u8282\u70b9-id"},"\u8282\u70b9 id"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"\u8282\u70b9 id")," \u7528\u4e8e\u83b7\u53d6\u7279\u5b9a\u8bbe\u5907\u6811\u8282\u70b9\u7684\u76f8\u5173\u4fe1\u606f\u3002\u5b83\u53ea\u662f\u4e00\u4e2a\u7528\u4e8e\u5f15\u7528\u8282\u70b9\u7684 C \u5b8f\u3002\uff08\u4e0b\u6587\u4e2d\u6709\u65f6\u51fa\u73b0\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"node_id")," \u4e5f\u6307\u4ee3\u8282\u70b9 id \uff09"),(0,i.kt)("p",null,"\u4ee5\u4e0b\u662f\u83b7\u53d6\u8282\u70b9 id \u7684\u4e3b\u8981\u65b9\u6cd5\uff1a"),(0,i.kt)("h4",{style:{background:"var(--ra-color-important)",color:"var(--ra-color-note)",padding:4}},"\u901a\u8fc7\u8def\u5f84"),(0,i.kt)("div",{style:{paddingLeft:16}},(0,i.kt)("p",null,"\u8c03\u7528 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_path"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_PATH()"))," \u6240\u9700\u53c2\u6570\u4e3a\uff0c\u8bbe\u5907\u6811\u4e2d\u8282\u70b9\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u5b83\u9700\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u3002\u6b64\u65b9\u5f0f\u65e8\u5728\u660e\u786e\u8282\u70b9\u786e\u5207\u4f4d\u7f6e\u65f6\u53d1\u6325\u4f5c\u7528\u3002")),(0,i.kt)("h4",{style:{background:"var(--ra-color-important)",color:"var(--ra-color-note)",padding:4}},"\u901a\u8fc7\u8282\u70b9\u6807\u7b7e"),(0,i.kt)("div",{style:{paddingLeft:16}},(0,i.kt)("p",null,"\u4f7f\u7528 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/intro#node-label"},"\u8282\u70b9\u6807\u7b7e")," \u901a\u8fc7 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_nodelabellabel"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_NODELABEL()"))," \u83b7\u53d6\u8282\u70b9 id \u3002\u8282\u70b9\u6807\u7b7e\u901a\u5e38\u5728 SoC ",(0,i.kt)("inlineCode",{parentName:"p"},".dtsi")," \u4e2d\u63d0\u4f9b\uff0c\u8282\u70b9\u6807\u7b7e\u901a\u5e38\u662f\u4e0e SoC datasheet \u5339\u914d\u7684\u8282\u70b9\u540d\u79f0\uff0c\u5982 ",(0,i.kt)("inlineCode",{parentName:"p"},"i2c1")," \u3001 ",(0,i.kt)("inlineCode",{parentName:"p"},"spi2")," \u7b49\u3002")),(0,i.kt)("h4",{style:{background:"var(--ra-color-important)",color:"var(--ra-color-note)",padding:4}},"\u901a\u8fc7\u522b\u540d"),(0,i.kt)("div",{style:{paddingLeft:16}},(0,i.kt)("p",null,"\u4f7f\u7528 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_aliasalias"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_ALIAS()"))," \u83b7\u53d6\u7531\u7279\u6b8a ",(0,i.kt)("inlineCode",{parentName:"p"},"/aliases")," \u8282\u70b9\u5c5e\u6027\u8868\u793a\u7684\u8282\u70b9 id \u3002\u8fd9\u6709\u65f6\u662f\u7531\u5e94\u7528\u7a0b\u5e8f\uff08\u5982\u5728 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/application/peripheral/samples/gpio"},"GPIO \u793a\u4f8b")," \u4e2d\u5373\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"led0")," \u522b\u540d\uff09\u5b8c\u6210\u7684\uff1b\u8fd9\u4e9b\u7a0b\u5e8f\u4e2d\uff0c\u9700\u8981\u5f15\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u67d0\u4e9b\u8bbe\u5907\uff0c\u4f46\u4e0d\u5173\u5fc3\u4f7f\u7528\u54ea\u4e2a\u8bbe\u5907\uff08\u4f8b\u5982\uff0c\u67d0\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5e0c\u671b\u8fd0\u884c\u8d77\u6765\u540e\u53ef\u4eae\u8d77\u67d0\u4e2a LED \u7528\u4f5c\u63d0\u793a\uff0c\u4f46\u7528\u6237\u53ef\u81ea\u884c\u914d\u7f6e\u6700\u7ec8\u6307\u5b9a\u54ea\u4e00\u4e2a LED \u800c\u7a0b\u5e8f\u672c\u8eab\u4e0d\u5173\u5fc3\uff09\u3002")),(0,i.kt)("h4",{style:{background:"var(--ra-color-important)",color:"var(--ra-color-note)",padding:4}},"\u901a\u8fc7\u5b9e\u4f8b\u7f16\u53f7"),(0,i.kt)("div",{style:{paddingLeft:16}},(0,i.kt)("p",null,"\u8fd9\u4e3b\u8981\u7531\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u5b8c\u6210\uff0c\u56e0\u4e3a\u5b9e\u4f8b\u7f16\u53f7\u662f\u4e00\u79cd\u57fa\u4e8e\u5339\u914d\u517c\u5bb9\u6765\u5f15\u7528\u5355\u4e2a\u8282\u70b9\u7684\u65b9\u6cd5\u3002\u8fd9\u4e9b\u7f16\u53f7\u901a\u8fc7 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_instinst-compat"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_INST()"))," \u83b7\u53d6\uff0c\u4f46\u8fd9\u4e00\u505a\u6cd5\u9700\u8981\u5c0f\u5fc3\u5904\u7406\uff08\u4e0b\u6587\u5c06\u63d0\u5230\u4e3a\u4f55\u9700\u8981\uff09\u3002")),(0,i.kt)("h4",{style:{background:"var(--ra-color-important)",color:"var(--ra-color-note)",padding:4}},"\u901a\u8fc7\u9009\u4e2d\u7684\u8282\u70b9"),(0,i.kt)("div",{style:{paddingLeft:16}},(0,i.kt)("p",null,"\u4f7f\u7528 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_chosenprop"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_CHOSEN()"))," \u83b7\u53d6 ",(0,i.kt)("inlineCode",{parentName:"p"},"/chosen")," \u8282\u70b9\u5c5e\u6027\u6240\u8868\u793a\u7684\u8282\u70b9 id \u3002")),(0,i.kt)("h4",{style:{background:"var(--ra-color-important)",color:"var(--ra-color-note)",padding:4}},"\u901a\u8fc7\u7236\u5b50\u5173\u7cfb"),(0,i.kt)("div",{style:{paddingLeft:16}},(0,i.kt)("p",null,"\u4ece\u5df2\u6709\u7684\u8282\u70b9 id \u5f00\u59cb\u83b7\u53d6\u7236\u8282\u70b9\u6216\u5b50\u8282\u70b9\u7684\u8282\u70b9 id \uff0c\u901a\u8fc7\u4f7f\u7528 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_parentnode_id"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_PARENT()"))," \u548c ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_childnode_id-child"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_CHILD()"))," \u5b9e\u73b0\u3002")),(0,i.kt)("p",null,"\u5f15\u7528\u540c\u4e00\u8282\u70b9\u7684\u4e24\u4e2a\u8282\u70b9 id \u662f\u7b49\u4ef7\u7684\uff0c\u53ef\u4ee5\u4e92\u6362\u4f7f\u7528\u3002"),(0,i.kt)("a",{id:"dts-example"}),(0,i.kt)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u5047\u60f3\u786c\u4ef6\u7684 DTS \u7247\u6bb5\uff0c\u6211\u4eec\u5c06\u5728\u5168\u6587\u59cb\u672b\u90fd\u4ee5\u6b64\u4f5c\u4e3a\u793a\u4f8b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'/dts-v1/;\n\n/ {\n\n    aliases {\n        sensor-controller = &i2c1;\n    };\n\n    soc {\n        i2c1: i2c@40002000 {\n            compatible = "vnd,soc-i2c";\n            label = "I2C_1";\n            reg = <0x40002000 0x1000>;\n            status = "okay";\n            clock-frequency = < 100000 >;\n        };\n    };\n};\n')),(0,i.kt)("p",null,"\u4ee5\u4e0b\u662f\u83b7\u53d6 ",(0,i.kt)("inlineCode",{parentName:"p"},"i2c@40002000")," \u8282\u70b9\u7684 id \u7684\u51e0\u79cd\u65b9\u6cd5\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DT_PATH(soc, i2c_40002000)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DT_NODELABEL(i2c1)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DT_ALIAS(sensor_controller)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DT_INST(x, vnd_soc_i2c)")," \u7528\u4e8e\u67d0\u4e2a\u672a\u77e5\u6570 ",(0,i.kt)("inlineCode",{parentName:"li"},"x")," \u3002\u8bf7\u53c2\u9605 ",(0,i.kt)("a",{parentName:"li",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_instinst-compat"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_INST()"))," \u6587\u6863\u4e86\u89e3\u76f8\u5173\u8be6\u7ec6\u4fe1\u606f\u3002")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\u91cd\u8981")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u8bbe\u5907\u6811\u540d\u79f0\u4e2d\uff0c\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\uff08\u4f8b\u5982\u7834\u6298\u53f7 ( ",(0,i.kt)("inlineCode",{parentName:"p"},"-")," ) \u548c at \u7b26\u53f7 ( ",(0,i.kt)("inlineCode",{parentName:"p"},"@")," ) \u7b49\uff09\u5c06\u8f6c\u6362\u4e3a\u4e0b\u5212\u7ebf ( ",(0,i.kt)("inlineCode",{parentName:"p"},"_")," )\u3002 DTS \u4e2d\u7684\u540d\u79f0\u4e5f\u4f1a\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002"))),(0,i.kt)("h2",{id:"\u8282\u70b9-id-\u5e76\u4e0d\u662f\u503c"},"\u8282\u70b9 id \u5e76\u4e0d\u662f\u503c"),(0,i.kt)("p",null,"\u4e00\u4e2a\u8282\u70b9 id \u65e0\u6cd5\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\u3002\u8fd9\u79cd\u5199\u6cd5\u662f\u4e0d\u53ef\u884c\u7684\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"/* \u8fd9\u6837\u5199\u4f1a\u5f15\u53d1\u7f16\u8bd1\u5668\u62a5\u9519: */\n\nvoid *i2c_0 = DT_INST(0, vnd_soc_i2c);\nunsigned int i2c_1 = DT_INST(1, vnd_soc_i2c);\nlong my_i2c = DT_NODELABEL(i2c1);\n")),(0,i.kt)("p",null,"\u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e9b\u7b80\u77ed\u7684\u5c01\u88c5\u6765\u8282\u7701\u4ee3\u7801\u91cf\uff0c\u8bf7\u4f7f\u7528 C \u5b8f\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"/* \u7c7b\u4f3c\u4e0b\u5217\u7528\u6cd5: */\n\n#define MY_I2C DT_NODELABEL(i2c1)\n\n#define INST(i) DT_INST(i, vnd_soc_i2c)\n#define I2C_0 INST(0)\n#define I2C_1 INST(1)\n")),(0,i.kt)("h2",{id:"\u8bbf\u95ee\u5c5e\u6027"},"\u8bbf\u95ee\u5c5e\u6027"),(0,i.kt)("p",null,"\u8bfb\u53d6\u5c5e\u6027\u503c\u7684\u6b63\u786e API \uff0c\u5c5e\u6027\u503c\u53d6\u51b3\u4e8e\u8282\u70b9\u548c\u5c5e\u6027\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#%E6%A3%80%E6%9F%A5%E5%B1%9E%E6%80%A7%E4%B8%8E%E5%AF%B9%E5%BA%94%E5%80%BC"},"\u68c0\u67e5\u5c5e\u6027\u4e0e\u5bf9\u5e94\u503c")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#%E7%AE%80%E5%8D%95%E5%B1%9E%E6%80%A7"},"\u7b80\u5355\u5c5e\u6027")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#reg-%E5%B1%9E%E6%80%A7"},"reg \u5c5e\u6027")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#interrupts-%E5%B1%9E%E6%80%A7"},"interrupts \u5c5e\u6027")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#phandle-%E5%B1%9E%E6%80%A7"},"phandle \u5c5e\u6027"))),(0,i.kt)("h3",{id:"\u68c0\u67e5\u5c5e\u6027\u4e0e\u5bf9\u5e94\u503c"},"\u68c0\u67e5\u5c5e\u6027\u4e0e\u5bf9\u5e94\u503c"),(0,i.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_node_has_propnode_id-prop"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_NODE_HAS_PROP()"))," \u6765\u68c0\u67e5\u8282\u70b9\u662f\u5426\u5177\u6709\u67d0\u5c5e\u6027\u3002\u5bf9\u4e8e\u4e0a\u6587\u63d0\u53ca\u7684 ",(0,i.kt)("a",{parentName:"p",href:"#dts-example"},"\u793a\u4f8b\u8bbe\u5907\u6811")," \uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"DT_NODE_HAS_PROP(DT_NODELABEL(i2c1), clock_frequency)  /* expands to 1 */\nDT_NODE_HAS_PROP(DT_NODELABEL(i2c1), not_a_property)   /* expands to 0 */\n")),(0,i.kt)("h3",{id:"\u7b80\u5355\u5c5e\u6027"},"\u7b80\u5355\u5c5e\u6027"),(0,i.kt)("p",null,"\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"DT_PROP(node_id, property)")," \u8bfb\u53d6\u57fa\u672c\u7c7b\u578b\u5c5e\u6027\uff0c\u5982\u6574\u578b\uff08 integer \uff09\u3001\u5e03\u5c14\u578b\uff08 boolean \uff09\u3001\u5b57\u7b26\u4e32\uff08 string \uff09\u3001\u6570\u503c\u6570\u7ec4\u548c\u5b57\u7b26\u4e32\u6570\u7ec4\u3002"),(0,i.kt)("p",null,"\u4f8b\u5982\uff0c\u5bf9 ",(0,i.kt)("a",{parentName:"p",href:"#dts-example"},"\u4e0a\u4f8b")," \u7684\u8bbe\u5907\u6811\u8bfb\u53d6 ",(0,i.kt)("inlineCode",{parentName:"p"},"clock-frequency")," \u5c5e\u6027\u503c\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"DT_PROP(DT_PATH(soc, i2c_40002000), clock_frequency)  /* This is 100000, */\nDT_PROP(DT_NODELABEL(i2c1), clock_frequency)          /* and so is this, */\nDT_PROP(DT_ALIAS(sensor_controller), clock_frequency) /* and this. */\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\u91cd\u8981")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"DTS \u5c5e\u6027 ",(0,i.kt)("inlineCode",{parentName:"p"},"clock-frequency")," \u5728 C \u4e2d\u8f6c\u6362\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"clock_frequency")," \u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u5c5e\u6027\u540d\u4e5f\u5c06\u7279\u6b8a\u5b57\u7b26\u8f6c\u6362\u4e3a\u4e0b\u5212\u7ebf\uff0c\u5e76\u5f3a\u5236\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," \u7684\u5c5e\u6027\u7684\u5904\u7406\u65b9\u5f0f\u5b8c\u5168\u76f8\u540c\u3002\u5728\u5c5e\u6027\u4e3a\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\u4e0b\uff0c ",(0,i.kt)("inlineCode",{parentName:"p"},"DT_PROP()")," \u5b8f\u6269\u5c55\u4e3a\u5b57\u7b26\u4e32\u6587\u5b57\uff1b\u5728\u5e03\u5c14\u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u6269\u5c55\u4e3a\u6570\u5b57 0 \u6216 1\u3002\u4f8b\u5982\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'#define I2C1 DT_NODELABEL(i2c1)\n\nDT_PROP(I2C1, status)  /* expands to the string literal "okay" */\n')),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"\u6ce8\u610f")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"}," ",(0,i.kt)("inlineCode",{parentName:"p"},"DT_NODE_HAS_PROP()")," \u4e0d\u5e94\u7528\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," \u5c5e\u6027\u4e0a\uff0c\u800c\u5e94\u50cf\u4e0a\u4f8b\u4e00\u6837\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"DT_PROP()")," \u3002 ",(0,i.kt)("inlineCode",{parentName:"p"},"DT_PROP()")," \u4f1a\u6839\u636e\u5c5e\u6027\u662f\u5426\u5b58\u5728\uff0c\u5b83\u5c06\u5c55\u5f00\u4e3a 0 \u6216 1\u3002"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"array")," \u3001 ",(0,i.kt)("inlineCode",{parentName:"p"},"uint8-array")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"string-array")," \u7684\u5c5e\u6027\u7684\u5904\u7406\u65b9\u5f0f\u7c7b\u4f3c \u2014\u2014 \u5bf9\u4e8e\u6570\u7ec4\u5c5e\u6027\uff0c ",(0,i.kt)("inlineCode",{parentName:"p"},"DT_PROP()")," \u5c06\u5176\u5c55\u5f00\u4e3a\u4e00\u4e2a\u6570\u7ec4\u521d\u59cb\u503c\u3002\u4f8b\u5982\u5728\u6b64\u8bbe\u5907\u6811\u7247\u6bb5\u4e2d\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'foo: foo@1234 {\n        a = <1000 2000 3000>; /* array */\n        b = [aa bb cc dd];    /* uint8-array */\n        c = "bar", "baz";     /* string-array */\n};\n')),(0,i.kt)("p",null,"\u53ef\u4ee5\u50cf\u8fd9\u6837\u8bbf\u95ee\u5b83\u7684\u5c5e\u6027\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'#define FOO DT_NODELABEL(foo)\n\nint a[] = DT_PROP(FOO, a);           /* {1000, 2000, 3000} */\nunsigned char b[] = DT_PROP(FOO, b); /* {0xaa, 0xbb, 0xcc, 0xdd} */\nchar* c[] = DT_PROP(FOO, c);         /* {"foo", "bar"} */\n')),(0,i.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_prop_lennode_id-prop"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_PROP_LEN()"))," \u6765\u83b7\u53d6\u8fd9\u4e9b\u6570\u7ec4\u5c5e\u6027\u7684\u957f\u5ea6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"size_t a_len = DT_PROP_LEN(FOO, a); /* 3 */\nsize_t b_len = DT_PROP_LEN(FOO, b); /* 4 */\nsize_t c_len = DT_PROP_LEN(FOO, c); /* 2 */\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"DT_PROP_LEN()")," \u4e0d\u80fd\u7528\u4e8e\u7279\u6b8a\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"reg")," \u6216 ",(0,i.kt)("inlineCode",{parentName:"p"},"interrupts")," \u5c5e\u6027\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\u6709\u53e6\u5916\u7684\u5b8f\u4f5c\u4e3a\u66ff\u4ee3\uff0c\u4e0b\u6587\u4e2d\u5c06\u5bf9\u5176\u8fdb\u884c\u63cf\u8ff0\u3002"),(0,i.kt)("h3",{id:"reg-\u5c5e\u6027"},"reg \u5c5e\u6027"),(0,i.kt)("p",null,"\u5728 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/intro#%E9%87%8D%E8%A6%81%E5%B1%9E%E6%80%A7"},"\u91cd\u8981\u5c5e\u6027")," \u4e2d\u5df2\u5bf9 ",(0,i.kt)("inlineCode",{parentName:"p"},"reg")," \u8fdb\u884c\u8fc7\u76f8\u5173\u4ecb\u7ecd\u3002"),(0,i.kt)("p",null,"\u7ed9\u5b9a\u8282\u70b9 id ",(0,i.kt)("inlineCode",{parentName:"p"},"node_id")," \uff0c\u5219 ",(0,i.kt)("inlineCode",{parentName:"p"},"DT_NUM_REGS(node_id)")," \u8868\u793a\u8282\u70b9 ",(0,i.kt)("inlineCode",{parentName:"p"},"reg")," \u5c5e\u6027\u4e2d\u7684\u5bc4\u5b58\u5668\u5757\u603b\u6570\u3002"),(0,i.kt)("p",null,"\u4f60 ",(0,i.kt)("strong",{parentName:"p"},"\u65e0\u6cd5")," \u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"DT_PROP(node, reg)")," \u8bfb\u53d6\u5bc4\u5b58\u5668\u5757\u7684\u5730\u5740\u548c\u5927\u5c0f\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DT_REG_ADDR(node_id)"),": \u7ed9\u5b9a\u8282\u70b9\u7684\u5bc4\u5b58\u5668\u5757\u7684\u5730\u5740"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DT_REG_SIZE(node_id)"),": \u7ed9\u5b9a\u7684\u5bc4\u5b58\u5668\u5757\u7684\u5927\u5c0f")),(0,i.kt)("p",null,"\u5982\u679c\u8282\u70b9\u6709\u591a\u4e2a\u5bc4\u5b58\u5668\u5757\uff0c\u5219\u6539\u7528 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_reg_addr_by_idxnode_id-idx"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_REG_ADDR_BY_IDX()"))," \u6216 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_reg_size_by_idxnode_id-idx"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_REG_SIZE_BY_IDX()"))," \uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DT_REG_ADDR_BY_IDX(node_id, idx)"),": \u7d22\u5f15 ",(0,i.kt)("inlineCode",{parentName:"li"},"idx")," \u5bf9\u5e94\u5bc4\u5b58\u5668\u5757\u7684\u5730\u5740"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DT_REG_SIZE_BY_IDX(node_id, idx)"),": \u7d22\u5f15 ",(0,i.kt)("inlineCode",{parentName:"li"},"idx")," \u5bf9\u5e94\u5bc4\u5b58\u5668\u5757\u7684\u5927\u5c0f")),(0,i.kt)("p",null,"\u8fd9\u91cc\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"idx")," \u53c2\u6570\u5fc5\u987b\u662f\u6574\u578b\u6570\u5b57\u6216\u53ef\u6269\u5c55\u4e3a\u4e00\u4e2a\u65e0\u9700\u4efb\u4f55\u7b97\u672f\u7684\u5b8f\u3002\u5c24\u5176\u8981\u6ce8\u610f\uff0c ",(0,i.kt)("inlineCode",{parentName:"p"},"idx")," \u4e0d\u80fd\u662f\u53d8\u91cf\u3002\u50cf\u8fd9\u6837\u7684\u4f8b\u5b50\u5c31\u4e0d\u8d77\u4f5c\u7528\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"/* \u8fd9\u6837\u5199\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5668\u62a5\u9519 */\n\nfor (size_t i = 0; i < DT_NUM_REGS(node_id); i++) {\n        size_t addr = DT_REG_ADDR_BY_IDX(node_id, i);\n}\n")),(0,i.kt)("h3",{id:"interrupts-\u5c5e\u6027"},"interrupts \u5c5e\u6027"),(0,i.kt)("p",null,"\u5728 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/intro#%E9%87%8D%E8%A6%81%E5%B1%9E%E6%80%A7"},"\u91cd\u8981\u5c5e\u6027")," \u4e2d\u5df2\u5bf9 ",(0,i.kt)("inlineCode",{parentName:"p"},"interrupts")," \u8fdb\u884c\u8fc7\u76f8\u5173\u4ecb\u7ecd\u3002"),(0,i.kt)("p",null,"\u7ed9\u5b9a\u8282\u70b9 id  ",(0,i.kt)("inlineCode",{parentName:"p"},"node_id")," \uff0c ",(0,i.kt)("inlineCode",{parentName:"p"},"DT_NUM_IRQS(node_id)")," \u8868\u793a\u8282\u70b9 ",(0,i.kt)("inlineCode",{parentName:"p"},"interrupts")," \u5c5e\u6027\u4e2d\u7684\u4e2d\u65ad\u8bf4\u660e\u7b26\u7684\u603b\u6570\u3002"),(0,i.kt)("p",null,"\u5728\u8bbf\u95ee\u8fd9\u4e9b\u53d8\u91cf\u7684\u573a\u666f\u4e2d\uff0c\u6700\u901a\u7528 API \u5b8f\u662f ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_irq_by_idxnode_id-idx-cell"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_IRQ_BY_IDX()"))," \uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"DT_IRQ_BY_IDX(node_id, idx, val)\n")),(0,i.kt)("p",null,"\u8fd9\u91cc\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"idx")," \u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"interrupts")," \u6570\u7ec4\u7684\u903b\u8f91\u7d22\u5f15\uff08 index \uff09\uff0c\u5b83\u7528\u4e8e\u6307\u5411\u5c5e\u6027\u4e2d\u7684\u5355\u4e2a\u4e2d\u65ad\u8bf4\u660e\u7b26\u3002 ",(0,i.kt)("inlineCode",{parentName:"p"},"val")," \u53c2\u6570\u662f\u4e2d\u65ad\u8bf4\u660e\u7b26\u4e2d\u7684\u5355\u5143\u683c\u7684\u540d\u79f0\u3002\u8981\u4f7f\u7528\u6b64\u5b8f\uff0c\u8bf7\u5728\u7ed1\u5b9a\u6587\u4ef6\u4e2d\u67e5\u627e\u5bf9\u5e94\u8282\u70b9\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"val")," \u540d\u79f0\u3002"),(0,i.kt)("p",null,"\u5927\u591a\u6570 Zephyr \u8bbe\u5907\u6811\u7ed1\u5b9a\u90fd\u6709\u4e00\u4e2a\u540d\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"irq")," \u7684\u5355\u5143\uff0c\u5373\u4e2d\u65ad\u7f16\u53f7\u3002\u82e5\u4f60\u8981\u83b7\u53d6\u6b64\u503c\u7684\u5904\u7406\u5b8c\u6210\u7684\u6982\u89c8\uff0c\u4f7f\u7528 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_irqnnode_id"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_IRQN()"))," \u662f\u4e00\u79cd\u4fbf\u6377\u7684\u65b9\u5f0f\u3002"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"\u8b66\u544a")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u8fd9\u91cc\u63d0\u5230\u7684\u201c\u5904\u7406\u5b8c\u6210\u201d\u6307\u7684\u662f\uff0c Zephyr \u7684\u8bbe\u5907\u6811 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/intro#%E8%84%9A%E6%9C%AC%E4%B8%8E%E5%B7%A5%E5%85%B7"},"\u811a\u672c\u548c\u5de5\u5177")," \u4f1a\u66f4\u6539 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/intro#%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA%E6%96%87%E4%BB%B6"},"zephyr.dts")," \u4e2d\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"irq")," \u7f16\u53f7\u4ee5\u5904\u7406\u67d0\u4e9b SoC \u4e0a\u7684\u786c\u4ef6\u7ea6\u675f\uff0c\u5e76\u4f7f\u5176\u7b26\u5408 Zephyr \u7684\u591a\u7ea7\u4e2d\u65ad\u7f16\u53f7\u3002"),(0,i.kt)("p",{parentName:"div"},"\u7531\u4e8e\u8fd9\u5757\u5185\u5bb9\u76ee\u524d\u6ca1\u6709\u5f88\u597d\u7684\u6587\u6863\u8bb0\u5f55\uff0c\u5982\u679c\u4f60\u6b63\u5728\u7f16\u5199\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\uff0c\u53ef\u80fd\u9700\u8981\u9605\u8bfb\u811a\u672c\u7684\u6e90\u4ee3\u7801\u548c\u73b0\u6709\u9a71\u52a8\u7a0b\u5e8f\u6765\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002"))),(0,i.kt)("h3",{id:"phandle-\u5c5e\u6027"},"phandle \u5c5e\u6027"),(0,i.kt)("p",null,"\u5728 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/intro#%E8%AE%BE%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%80%BC"},"\u8bbe\u7f6e\u5c5e\u6027\u503c")," \u4e2d\u4ecb\u7ecd\u8fc7\uff0cphandle \u8bed\u6cd5\u652f\u6301\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"&another-node")," \u5728\u5c5e\u6027\u503c\u4e2d\u5f15\u7528\u5176\u4ed6\u8282\u70b9\u3002\u5728\u7ed1\u5b9a\u4e2d\uff0c phandle \u5c5e\u6027\u5305\u542b\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"phandle")," \u3001 ",(0,i.kt)("inlineCode",{parentName:"p"},"phandles")," \u6216 ",(0,i.kt)("inlineCode",{parentName:"p"},"phandle-array")," \u4e2d\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u7edf\u79f0\u4e3a\u4e3a\u201cphandle \u5c5e\u6027\u201d\u3002"),(0,i.kt)("p",null,"\u5f53\u4f60\u8981\u5c06 phandle \u8f6c\u6362\u4e3a\u8282\u70b9 id \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_phandlenode_id-prop"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_PHANDLE()"))," \u3001 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_phandle_by_idxnode_id-prop-idx"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_PHANDLE_BY_IDX()"))," \u6216 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_phandle_by_namenode_id-pha-name"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_PHANDLE_BY_NAME()"))," \uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u4f60\u4f7f\u7528\u7684\u5c5e\u6027\u7c7b\u578b\u3002"),(0,i.kt)("p",null,"phandle \u5c5e\u6027\u7684\u4e00\u4e2a\u5e38\u89c1\u7528\u4f8b\u662f\uff0c\u5f15\u7528\u5176\u4ed6\u5728\u8bbe\u5907\u6811\u4e2d\u7684\u786c\u4ef6\u3002\u5728\u8fd9\u4e00\u573a\u666f\u4e2d\uff0c\u4f60\u901a\u5e38\u5e0c\u671b\u5c06\u8bbe\u5907\u6811\u7ea7\u522b\u7684 phandle \u8f6c\u6362\u4e3a Zephyr \u9a71\u52a8\u7a0b\u5e8f\u7ea7\u522b\u7684\u8bbe\u5907\u7ed3\u6784\u4f53 ",(0,i.kt)("a",{parentName:"p",href:"https://docs.zephyrproject.org/latest/kernel/drivers/index.html#device-model-api"},"struct device")," \u3002\u53ef\u53c2\u9605 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/howtos#%E4%BB%8E%E8%AE%BE%E5%A4%87%E6%A0%91%E4%B8%AD%E8%8E%B7%E5%8F%96%E8%AE%BE%E5%A4%87%E7%BB%93%E6%9E%84%E4%BD%93"},"\u4ece\u8bbe\u5907\u6811\u4e2d\u83b7\u53d6\u8bbe\u5907\u7ed3\u6784\u4f53")," \u4e86\u89e3\u600e\u4e48\u505a\u3002"),(0,i.kt)("p",null,"\u53e6\u4e00\u4e2a\u5e38\u89c1\u7528\u4f8b\u662f\u8bbf\u95ee phandle \u6570\u7ec4\u4e2d\u7684\u6807\u8bc6\u7b26\u503c\u3002\u5b9e\u73b0\u8fd9\u4e00\u7528\u6cd5\u7684\u901a\u7528 API \u662f ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_pha_by_idxnode_id-pha-idx-cell"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_PHA_BY_IDX()"))," \u548c ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_phanode_id-pha-cell"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_PHA()"))," \u3002\u4e5f\u6709\u7279\u5b9a\u4e8e\u786c\u4ef6\u7684\u4e00\u4e9b\u7528\u6cd5\uff1a",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_gpio_ctlr_by_idxnode_id-gpio_pha-idx"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_GPIO_CTLR_BY_IDX()"))," \u3001 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_gpio_ctlrnode_id-gpio_pha"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_GPIO_CTLR()"))," \u3001 ",(0,i.kt)("a",{parentName:"p",href:"https://docs.zephyrproject.org/latest/build/dts/api/api.html#c.DT_GPIO_LABEL_BY_IDX"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_GPIO_LABEL_BY_IDX()"))," \u3001 ",(0,i.kt)("a",{parentName:"p",href:"https://docs.zephyrproject.org/latest/build/dts/api/api.html#c.DT_GPIO_LABEL"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_GPIO_LABEL()"))," \u3001 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_gpio_pin_by_idxnode_id-gpio_pha-idx"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_GPIO_PIN_BY_IDX()"))," \u3001 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_gpio_pinnode_id-gpio_pha"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_GPIO_PIN()"))," \u3001 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_gpio_flags_by_idxnode_id-gpio_pha-idx"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_GPIO_FLAGS_BY_IDX()"))," \u6216 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_gpio_flagsnode_id-gpio_pha"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_GPIO_FLAGS()"))),(0,i.kt)("p",null,"\u8981\u68c0\u67e5\u6807\u8bc6\u7b26\u503c\u662f\u5426\u5b58\u5728\u4e8e phandle \u5c5e\u6027\u4e2d\uff0c\u8bf7\u53c2\u9605 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_pha_has_cell_at_idxnode_id-pha-idx-cell"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_PHA_HAS_CELL_AT_IDX()"))," \u548c ",(0,i.kt)("a",{parentName:"p",href:"https://docs.zephyrproject.org/latest/build/dts/api/api.html#c.DT_PROP_HAS_IDX"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_PROP_HAS_IDX()"))," \u3002"),(0,i.kt)("h2",{id:"\u5176\u4ed6-api"},"\u5176\u4ed6 API"),(0,i.kt)("p",null,"\u4ee5\u4e0b\u662f\u5176\u4ed6\u4e00\u4e9b\u53ef\u7528 API \u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_chosenprop"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_CHOSEN()")),", ",(0,i.kt)("a",{parentName:"li",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_has_chosenprop"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_HAS_CHOSEN()")),": \u7528\u4e8e\u7279\u6b8a /chosen \u8282\u70b9\u7684\u5c5e\u6027"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_has_compat_status_okaycompat"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_HAS_COMPAT_STATUS_OKAY()")),", ",(0,i.kt)("a",{parentName:"li",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_node_has_compatnode_id-compat"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_NODE_HAS_COMPAT()")),": \u4e0e ",(0,i.kt)("inlineCode",{parentName:"li"},"compatible")," \u5c5e\u6027\u76f8\u5173\u7684\u5168\u5c40\u7684\u6216\u8282\u70b9\u7279\u5b9a\u7684\u6d4b\u8bd5"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_busnode_id"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_BUS()")),": \u83b7\u53d6\u4e00\u4e2a\u8282\u70b9\u7684\u603b\u7ebf\u63a7\u5236\u5668\uff08\u5982\u679c\u6709\uff09"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_enum_idxnode_id-prop"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_ENUM_IDX()")),": \u7528\u4e8e\u53d6\u503c\u58f0\u660e\u4e3a enum \u7684\u5c5e\u6027\uff0c\u7528\u4e8e\u67e5\u627e\u5c5e\u6027\u503c\u5728\u5176\u56fa\u5b9a\u9009\u9879\u5217\u8868\u4e2d\u7684\u7d22\u5f15"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs-csk6/chips/600X/build/dts/api/api#devicetree-flash-api"},"\u56fa\u5b9a\u7684 flash \u5206\u533a"),": \u7528\u4e8e\u7ba1\u7406\u56fa\u5b9a\u7684 flash \u5206\u533a\u3002\u4e5f\u53ef\u53c2\u8003 ",(0,i.kt)("a",{parentName:"li",href:"/docs-csk6/chips/600X/service/storage/flash_map"},"Flash map")," \u67e5\u9605\u5982\u4f55\u4f7f\u7528\u66f4\u53cb\u597d\u7684 API \u8fbe\u6210\u76ee\u7684\u3002")),(0,i.kt)("h2",{id:"\u8bbe\u5907\u9a71\u52a8\u4fbf\u6377\u6027"},"\u8bbe\u5907\u9a71\u52a8\u4fbf\u6377\u6027"),(0,i.kt)("p",null,"\u5728\u7f16\u5199\u4e00\u4e9b\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u65f6\u7279\u6b8a\u7684\u5b8f\u5f88\u6709\u7528\uff0c\u8fd9\u7c7b\u9a71\u52a8\u901a\u5e38\u4f9d\u8d56\u4e8e ",(0,i.kt)("a",{parentName:"p",href:"#%E8%8A%82%E7%82%B9-id"},"\u5b9e\u4f8b\u7684\u8282\u70b9 id")," \u3002"),(0,i.kt)("p",null,"\u8981\u4f7f\u7528\u8fd9\u4e9b\u5b8f\uff0c\u4f60\u5fc5\u987b\u5b9a\u4e49 ",(0,i.kt)("inlineCode",{parentName:"p"},"DT_DRV_COMPAT")," \u4e3a\u9a71\u52a8\u7a0b\u5e8f\u5b9e\u73b0\u652f\u6301\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"compat")," \u503c\u3002\u8be5 ",(0,i.kt)("inlineCode",{parentName:"p"},"compat")," \u503c\u6700\u7ec8\u5c06\u4f20\u7ed9 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#dt_instinst-compat"},(0,i.kt)("inlineCode",{parentName:"a"},"DT_INST()"))," \u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"#include <zephyr/devicetree.h>\n\n#define DT_DRV_COMPAT my_driver_compat\n\n/* \u7b49\u4ef7\u4e8e DT_INST(0, my_driver_compat): */\nDT_DRV_INST(0)\n\n/*\n * \u7b49\u4ef7\u4e8e DT_PROP(DT_INST(0, my_driver_compat), clock_frequency)\n */\nDT_INST_PROP(0, clock_frequency)\n")),(0,i.kt)("p",null,"\u8bf7\u5728 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#devicetree-inst-apis"},"\u57fa\u4e8e\u5b9e\u4f8b\u7684 API")," \u4e2d\u53c2\u8003\u76f8\u5173\u901a\u7528 API \u5f15\u7528\u3002"),(0,i.kt)("h2",{id:"\u7279\u5b9a\u4e8e\u786c\u4ef6\u7684-api"},"\u7279\u5b9a\u4e8e\u786c\u4ef6\u7684 API"),(0,i.kt)("p",null,"\u8fd9\u4e9b API \u662f\u57fa\u4e8e\u4e0a\u8ff0 API \u4e4b\u4e0a\u6784\u5efa\u7684\uff0c\u5b83\u4eec\u63d0\u4f9b\u4e86\u66f4\u4fbf\u5229\u7684\u65b9\u5f0f\u8bbf\u95ee\u786c\u4ef6\uff0c\u4e5f\u63d0\u5347\u4e86\u786c\u4ef6\u7279\u5b9a\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002\u8bf7\u53c2\u9605 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api#devicetree-hw-api"},"\u7279\u5b9a\u4e8e\u786c\u4ef6\u7684 API")," \u4e86\u89e3\u76f8\u5173\u8be6\u7ec6\u4fe1\u606f\u3002"),(0,i.kt)("h2",{id:"\u751f\u6210\u7684\u5b8f"},"\u751f\u6210\u7684\u5b8f"),(0,i.kt)("p",null,"\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"devicetree.h")," API \u8fd8\u672a\u751f\u6210\u4e4b\u524d\uff0c\u672c\u5c0f\u8282\u6240\u9610\u8ff0\u7684\u751f\u6210\u7684\u5b8f\u4f9d\u8d56 ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/intro#%E8%BE%93%E5%87%BA%E6%96%87%E4%BB%B6"},"devicetree_unfixed.h"),"\u3002\u8fd9\u4e00 C \u5934\u6587\u4ef6\u5728\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u76ee\u5f55\u4e2d\u90fd\u5c06\u751f\u6210\uff0c\u5176\u4e2d\u5305\u542b\u7684\u5b8f\u7528\u4e8e\u63cf\u8ff0\u8bbe\u5907\u6811\u6570\u636e\u3002"),(0,i.kt)("p",null,"\u8fd9\u4e9b\u5b8f\u5177\u6709\u68d8\u624b\u7684\u547d\u540d\u7ea6\u5b9a\uff0c ",(0,i.kt)("a",{parentName:"p",href:"/docs-csk6/chips/600X/build/dts/api/api"},"\u8bbe\u5907\u6811 API")," \u5c06\u5176\u62bd\u8c61\u51fa\u6765\u3002\u5b9e\u9645\u4e0a\u53ef\u89c6\u8fd9\u4e9b\u5b8f\u4e3a\u8bbe\u5907\u6811 API \u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f46\u56e0\u4e3a\u5b83\u4eec\u7ecf\u5e38\u51fa\u73b0\u5728\u7f16\u8bd1\u5668\u9519\u8bef\u6d88\u606f\u4e2d\uff0c\u6240\u4ee5\u7406\u89e3\u5b83\u4eec\u4e5f\u662f\u5f88\u6709\u7528\u7684\u3002"),(0,i.kt)("p",null,"\u672c\u8282\u5305\u542b\u8fd9\u4e9b\u5b8f\u6240\u4f7f\u7528\u8bed\u6cd5\u57fa\u4e8e\u6269\u5145\u5df4\u79d1\u65af-\u7459\u5c14\u8303\u5f0f\uff08ABNF\uff09\uff0c\u5e76\u5728\u6ce8\u91ca\u4e2d\u63d0\u4f9b\u793a\u4f8b\u548c\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\u8bf7\u53c2\u9605 ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7405"},"RFC 7405"),"\uff08\u672c\u8d28\u4e0a\u662f ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc5234"},"RFC 5234")," \u7684\u6269\u5c55\uff09\u4e86\u89e3\u5176\u8bed\u6cd5\u89c4\u8303\u3002"),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\u63d0\u793a")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u8981\u9605\u8bfb\u4ee5\u4e0b\u793a\u4f8b\uff0c\u9700\u8981\u5bf9 ABNF \u548c BNF \u90fd\u5177\u5907\u4e00\u5b9a\u7684\u4e86\u89e3\u3002\u8fd9\u91cc\u66f4\u91cd\u8981\u7684\u70b9\u662f\uff0c\u7406\u89e3\u5b8f\u7684\u751f\u6210\u8fc7\u7a0b\u57fa\u4e8e ABNF \u6765\u5b8c\u6210\uff0c\u800c\u4e0d\u662f\u5b8c\u5168\u8bfb\u61c2\u4e0b\u4f8b\u7684\u5b8c\u6574\u4ee3\u7801\u3002"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'; An RFC 7405 ABNF grammar for devicetree macros.\n; \n;\n; This does *not* cover macros pulled out of DT via Kconfig,\n; like CONFIG_SRAM_BASE_ADDRESS, etc. It only describes the\n; ones that start with DT_ and are directly generated, not\n; defined in a dts_fixup.h file.\n\n; --------------------------------------------------------------------\n; dt-macro: the top level nonterminal for a devicetree macro\n;\n; A dt-macro starts with uppercase "DT_", and is one of:\n;\n; - a <node-macro>, generated for a particular node\n; - some <other-macro>, a catch-all for other types of macros\ndt-macro = node-macro / other-macro\n\n; --------------------------------------------------------------------\n; node-macro: a macro related to a node\n\n; A macro about a property value\nnode-macro =  property-macro\n; A macro about the pinctrl properties in a node.\nnode-macro =/ pinctrl-macro\n; EXISTS macro: node exists in the devicetree\nnode-macro =/ %s"DT_N" path-id %s"_EXISTS"\n; Bus macros: the plain BUS is a way to access a node\'s bus controller.\n; The additional dt-name suffix is added to match that node\'s bus type;\n; the dt-name in this case is something like "spi" or "i2c".\nnode-macro =/ %s"DT_N" path-id %s"_BUS" ["_" dt-name]\n; The reg property is special and has its own macros.\nnode-macro =/ %s"DT_N" path-id %s"_REG_NUM"\nnode-macro =/ %s"DT_N" path-id %s"_REG_IDX_" DIGIT "_EXISTS"\nnode-macro =/ %s"DT_N" path-id %s"_REG_IDX_" DIGIT\n              %s"_VAL_" ( %s"ADDRESS" / %s"SIZE")\nnode-macro =/ %s"DT_N" path-id %s"_REG_NAME_" dt-name\n              %s"_VAL_" ( %s"ADDRESS" / %s"SIZE")\n; The interrupts property is also special.\nnode-macro =/ %s"DT_N" path-id %s"_IRQ_NUM"\nnode-macro =/ %s"DT_N" path-id %s"_IRQ_IDX_" DIGIT "_EXISTS"\nnode-macro =/ %s"DT_N" path-id %s"_IRQ_IDX_" DIGIT\n              %s"_VAL_" dt-name [ %s"_EXISTS" ]\nnode-macro =/ %s"DT_N" path-id %s"_IRQ_NAME_" dt-name\n              %s"_VAL_" dt-name [ %s"_EXISTS" ]\n; The ranges property is also special.\nnode-macro =/ %s"DT_N" path-id %s"_RANGES_NUM"\nnode-macro =/ %s"DT_N" path-id %s"_RANGES_IDX_" DIGIT "_EXISTS"\nnode-macro =/ %s"DT_N" path-id %s"_RANGES_IDX_" DIGIT\n              %s"_VAL_" ( %s"CHILD_BUS_FLAGS" / %s"CHILD_BUS_ADDRESS" /\n                          %s"PARENT_BUS_ADDRESS" / %s"LENGTH")\nnode-macro =/ %s"DT_N" path-id %s"_RANGES_IDX_" DIGIT\n              %s"_VAL_CHILD_BUS_FLAGS_EXISTS"\nnode-macro =/ %s"DT_N" path-id %s"_FOREACH_RANGE"\n; Subnodes of the fixed-partitions compatible get macros which contain\n; a unique ordinal value for each partition\nnode-macro =/ %s"DT_N" path-id %s"_PARTITION_ID" DIGIT\n; Macros are generated for each of a node\'s compatibles;\n; dt-name in this case is something like "vnd_device".\nnode-macro =/ %s"DT_N" path-id %s"_COMPAT_MATCHES_" dt-name\n; Every non-root node gets one of these macros, which expands to the node\n; identifier for that node\'s parent in the devicetree.\nnode-macro =/ %s"DT_N" path-id %s"_PARENT"\n; These are used internally by DT_FOREACH_CHILD, which iterates over\n; each child node.\nnode-macro =/ %s"DT_N" path-id %s"_FOREACH_CHILD"\nnode-macro =/ %s"DT_N" path-id %s"_FOREACH_CHILD_VARGS"\n; These are used internally by DT_FOREACH_CHILD_STATUS_OKAY, which iterates\n; over each child node with status "okay".\nnode-macro =/ %s"DT_N" path-id %s"_FOREACH_CHILD_STATUS_OKAY"\nnode-macro =/ %s"DT_N" path-id %s"_FOREACH_CHILD_STATUS_OKAY_VARGS"\n; The node\'s zero-based index in the list of it\'s parent\'s child nodes.\nnode-macro =/ %s"DT_N" path-id %s"_CHILD_IDX"\n; The node\'s status macro; dt-name in this case is something like "okay"\n; or "disabled".\nnode-macro =/ %s"DT_N" path-id %s"_STATUS_" dt-name\n; The node\'s dependency ordinal. This is a non-negative integer\n; value that is used to represent dependency information.\nnode-macro =/ %s"DT_N" path-id %s"_ORD"\n; The node\'s path, as a string literal\nnode-macro =/ %s"DT_N" path-id %s"_PATH"\n; The node\'s name@unit-addr, as a string literal\nnode-macro =/ %s"DT_N" path-id %s"_FULL_NAME"\n; The dependency ordinals of a node\'s requirements (direct dependencies).\nnode-macro =/ %s"DT_N" path-id %s"_REQUIRES_ORDS"\n; The dependency ordinals of a node supports (reverse direct dependencies).\nnode-macro =/ %s"DT_N" path-id %s"_SUPPORTS_ORDS"\n\n; --------------------------------------------------------------------\n; pinctrl-macro: a macro related to the pinctrl properties in a node\n;\n; These are a bit of a special case because they kind of form an array,\n; but the array indexes correspond to pinctrl-DIGIT properties in a node.\n;\n; So they\'re related to a node, but not just one property within the node.\n;\n; The following examples assume something like this:\n;\n;      foo {\n;              pinctrl-0 = <&bar>;\n;              pinctrl-1 = <&baz>;\n;              pinctrl-names = "default", "sleep";\n;      };\n\n; Total number of pinctrl-DIGIT properties in the node. May be zero.\n;\n;   #define DT_N_<node path>_PINCTRL_NUM 2\npinctrl-macro = %s"DT_N" path-id %s"_PINCTRL_NUM"\n; A given pinctrl-DIGIT property exists.\n;\n;     #define DT_N_<node path>_PINCTRL_IDX_0_EXISTS 1\n;     #define DT_N_<node path>_PINCTRL_IDX_1_EXISTS 1\npinctrl-macro =/ %s"DT_N" path-id %s"_PINCTRL_IDX_" DIGIT %s"_EXISTS"\n; A given pinctrl property name exists.\n;\n;     #define DT_N_<node path>_PINCTRL_NAME_default_EXISTS 1\n;     #define DT_N_<node path>_PINCTRL_NAME_sleep_EXISTS 1\npinctrl-macro =/ %s"DT_N" path-id %s"_PINCTRL_NAME_" dt-name %s"_EXISTS"\n; The corresponding index number of a named pinctrl property.\n;\n;     #define DT_N_<node path>_PINCTRL_NAME_default_IDX 0\n;     #define DT_N_<node path>_PINCTRL_NAME_sleep_IDX 1\npinctrl-macro =/ %s"DT_N" path-id %s"_PINCTRL_NAME_" dt-name %s"_IDX"\n; The node identifier for the phandle in a named pinctrl property.\n;\n;    #define DT_N_<node path>_PINCTRL_NAME_default_IDX_0_PH <node id for \'bar\'>\n;\n; There\'s no need for a separate macro for access by index: that\'s\n; covered by property-macro. We only need this because the map from\n; names to properties is implicit in the structure of the DT.\npinctrl-macro =/ %s"DT_N" path-id %s"_PINCTRL_NAME_" dt-name %s"_IDX_" DIGIT %s"_PH"\n\n; --------------------------------------------------------------------\n; property-macro: a macro related to a node property\n;\n; These combine a node identifier with a "lowercase-and-underscores form"\n; property name. The value expands to something related to the property\'s\n; value.\n;\n; The optional prop-suf suffix is when there\'s some specialized\n; subvalue that deserves its own macro, like the macros for an array\n; property\'s individual elements\n;\n; The "plain vanilla" macro for a property\'s value, with no prop-suf,\n; looks like this:\n;\n;   DT_N_<node path>_P_<property name>\n;\n; Components:\n;\n; - path-id: node\'s devicetree path converted to a C token\n; - prop-id: node\'s property name converted to a C token\n; - prop-suf: an optional property-specific suffix\nproperty-macro =  %s"DT_N" path-id %s"_P_" prop-id [prop-suf]\n\n; --------------------------------------------------------------------\n; path-id: a node\'s path-based macro identifier\n;\n; This in "lowercase-and-underscores" form. I.e. it is\n; the node\'s devicetree path converted to a C token by changing:\n;\n; - each slash (/) to _S_\n; - all letters to lowercase\n; - non-alphanumerics characters to underscores\n;\n; For example, the leaf node "bar-BAZ" in this devicetree:\n;\n;   / {\n;           foo@123 {\n;                   bar-BAZ {};\n;           };\n;   };\n;\n; has path-id "_S_foo_123_S_bar_baz".\npath-id = 1*( %s"_S_" dt-name )\n\n; ----------------------------------------------------------------------\n; prop-id: a property identifier\n;\n; A property name converted to a C token by changing:\n;\n; - all letters to lowercase\n; - non-alphanumeric characters to underscores\n;\n; Example node:\n;\n;   chosen {\n;       zephyr,console = &uart1;\n;       WHY,AM_I_SHOUTING = "unclear";\n;   };\n;\n; The \'zephyr,console\' property has prop-id \'zephyr_console\'.\n; \'WHY,AM_I_SHOUTING\' has prop-id \'why_am_i_shouting\'.\nprop-id = dt-name\n\n; ----------------------------------------------------------------------\n; prop-suf: a property-specific macro suffix\n;\n; Extra macros are generated for properties:\n;\n; - that are special to the specification ("reg", "interrupts", etc.)\n; - with array types (uint8-array, phandle-array, etc.)\n; - with "enum:" in their bindings\n; - that have zephyr device API specific macros for phandle-arrays\n; - related to phandle specifier names ("foo-names")\n;\n; Here are some examples:\n;\n; - _EXISTS: property, index or name existence flag\n; - _SIZE: logical property length\n; - _IDX_<i>: values of individual array elements\n; - _IDX_<DIGIT>_VAL_<dt-name>: values of individual specifier\n;   cells within a phandle array\n; - _ADDR_<i>: for reg properties, the i-th register block address\n; - _LEN_<i>: for reg properties, the i-th register block length\n;\n; The different cases are not exhaustively documented here to avoid\n; this file going stale. Please see devicetree.h if you need to know\n; the details.\nprop-suf = 1*( "_" gen-name ["_" dt-name] )\n\n; --------------------------------------------------------------------\n; other-macro: grab bag for everything that isn\'t a node-macro.\n\n; See examples below.\nother-macro =  %s"DT_N_" alternate-id\n; Total count of enabled instances of a compatible.\nother-macro =/ %s"DT_N_INST_" dt-name %s"_NUM_OKAY"\n; These are used internally by DT_FOREACH_STATUS_OKAY,\n; which iterates over each enabled node of a compatible.\nother-macro =/ %s"DT_FOREACH_OKAY_" dt-name\nother-macro =/ %s"DT_FOREACH_OKAY_VARGS_" dt-name\n; These are used internally by DT_INST_FOREACH_STATUS_OKAY,\n; which iterates over each enabled instance of a compatible.\nother-macro =/ %s"DT_FOREACH_OKAY_INST_" dt-name\nother-macro =/ %s"DT_FOREACH_OKAY_INST_VARGS_" dt-name\n; E.g.: #define DT_CHOSEN_zephyr_flash\nother-macro =/ %s"DT_CHOSEN_" dt-name\n; Declares that a compatible has at least one node on a bus.\n; Example:\n;\n;   #define DT_COMPAT_vnd_dev_BUS_spi 1\nother-macro =/ %s"DT_COMPAT_" dt-name %s"_BUS_" dt-name\n; Declares that a compatible has at least one status "okay" node.\n; Example:\n;\n;   #define DT_COMPAT_HAS_OKAY_vnd_dev 1\nother-macro =/ %s"DT_COMPAT_HAS_OKAY_" dt-name\n; Currently used to allow mapping a lowercase-and-underscores "label"\n; property to a fixed-partitions node. See the flash map API docs\n; for an example.\nother-macro =/ %s"DT_COMPAT_" dt-name %s"_LABEL_" dt-name\n\n; --------------------------------------------------------------------\n; alternate-id: another way to specify a node besides a path-id\n;\n; Example devicetree:\n;\n;   / {\n;           aliases {\n;                   dev = &dev_1;\n;           };\n;\n;           soc {\n;               dev_1: device@123 {\n;                   compatible = "vnd,device";\n;               };\n;           };\n;   };\n;\n; Node device@123 has these alternate-id values:\n;\n; - ALIAS_dev\n; - NODELABEL_dev_1\n; - INST_0_vnd_device\n;\n; The full alternate-id macros are:\n;\n;   #define DT_N_INST_0_vnd_device     DT_N_S_soc_S_device_123\n;   #define DT_N_ALIAS_dev             DT_N_S_soc_S_device_123\n;   #define DT_N_NODELABEL_dev_1       DT_N_S_soc_S_device_123\n;\n; These mainly exist to allow pasting an alternate-id macro onto a\n; "_P_<prop-id>" to access node properties given a node\'s alias, etc.\n;\n; Notice that "inst"-type IDs have a leading instance identifier,\n; which is generated by the devicetree scripts. The other types of\n; alternate-id begin immediately with names taken from the devicetree.\nalternate-id =  ( %s"ALIAS" / %s"NODELABEL" ) dt-name\nalternate-id =/ %s"INST_" 1*DIGIT "_" dt-name\n\n; --------------------------------------------------------------------\n; miscellaneous helper definitions\n\n; A dt-name is one or more:\n; - lowercase ASCII letters (a-z)\n; - numbers (0-9)\n; - underscores ("_")\n;\n; They are the result of converting names or combinations of names\n; from devicetree to a valid component of a C identifier by\n; lowercasing letters (in practice, this is a no-op) and converting\n; non-alphanumeric characters to underscores.\n;\n; You\'ll see these referred to as "lowercase-and-underscores" forms of\n; various devicetree identifiers throughout the documentation.\ndt-name = 1*( lower / DIGIT / "_" )\n\n; gen-name is used as a stand-in for a component of a generated macro\n; name which does not come from devicetree (dt-name covers that case).\n;\n; - uppercase ASCII letters (a-z)\n; - numbers (0-9)\n; - underscores ("_")\ngen-name = upper 1*( upper / DIGIT / "_" )\n\n; "lowercase ASCII letter" turns out to be pretty annoying to specify\n; in RFC-7405 syntax.\n;\n; This is just ASCII letters a (0x61) through z (0x7a).\nlower = %x61-7A\n\n; "uppercase ASCII letter" in RFC-7405 syntax\nupper = %x41-5A\n')))}l.isMDXComponent=!0}}]);