"use strict";(self.webpackChunkls_docs_web=self.webpackChunkls_docs_web||[]).push([[9539],{3905:(t,n,e)=>{e.d(n,{Zo:()=>u,kt:()=>f});var a=e(67294);function l(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function r(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,a)}return e}function i(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?r(Object(e),!0).forEach((function(n){l(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function s(t,n){if(null==t)return{};var e,a,l=function(t,n){if(null==t)return{};var e,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)e=r[a],n.indexOf(e)>=0||(l[e]=t[e]);return l}(t,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)e=r[a],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(l[e]=t[e])}return l}var p=a.createContext({}),o=function(t){var n=a.useContext(p),e=n;return t&&(e="function"==typeof t?t(n):i(i({},n),t)),e},u=function(t){var n=o(t.components);return a.createElement(p.Provider,{value:n},t.children)},m={inlineCode:"code",wrapper:function(t){var n=t.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(t,n){var e=t.components,l=t.mdxType,r=t.originalType,p=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),d=o(e),f=l,k=d["".concat(p,".").concat(f)]||d[f]||m[f]||r;return e?a.createElement(k,i(i({ref:n},u),{},{components:e})):a.createElement(k,i({ref:n},u))}));function f(t,n){var e=arguments,l=n&&n.mdxType;if("string"==typeof t||l){var r=e.length,i=new Array(r);i[0]=d;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=t,s.mdxType="string"==typeof t?t:l,i[1]=s;for(var o=2;o<r;o++)i[o]=e[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,e)}d.displayName="MDXCreateElement"},63180:(t,n,e)=>{e.r(n),e.d(n,{contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=e(87462),l=(e(67294),e(3905));const r={},i="\u6587\u4ef6\u7cfb\u7edf\u7684\u4f7f\u7528",s={unversionedId:"chips/600X/application/modules/filesystem",id:"chips/600X/application/modules/filesystem",isDocsHomePage:!1,title:"\u6587\u4ef6\u7cfb\u7edf\u7684\u4f7f\u7528",description:"\u6982\u8ff0",source:"@site/docs/chips/600X/application/modules/filesystem.md",sourceDirName:"chips/600X/application/modules",slug:"/chips/600X/application/modules/filesystem",permalink:"/docs-csk6/chips/600X/application/modules/filesystem",version:"current",frontMatter:{},sidebar:"docs/chips/600X",previous:{title:"NVS \u7684\u4f7f\u7528",permalink:"/docs-csk6/chips/600X/application/modules/nvs"},next:{title:"\u6982\u8ff0",permalink:"/docs-csk6/chips/600X/application/audio/overview"}},p=[{value:"\u6982\u8ff0",id:"\u6982\u8ff0",children:[]},{value:"\u5e38\u7528API\u63a5\u53e3",id:"\u5e38\u7528api\u63a5\u53e3",children:[{value:"fs_statvfs",id:"fs_statvfs",children:[]},{value:"fs_stat",id:"fs_stat",children:[]},{value:"fs_open",id:"fs_open",children:[]},{value:"fs_read",id:"fs_read",children:[]},{value:"fs_write",id:"fs_write",children:[]},{value:"fs_close",id:"fs_close",children:[]},{value:"fs_opendir",id:"fs_opendir",children:[]},{value:"fs_readdir",id:"fs_readdir",children:[]},{value:"fs_closedir",id:"fs_closedir",children:[]},{value:"fs_mount",id:"fs_mount",children:[]},{value:"fs_unmount",id:"fs_unmount",children:[]}]},{value:"\u4f7f\u7528\u793a\u4f8b",id:"\u4f7f\u7528\u793a\u4f8b",children:[{value:"\u51c6\u5907\u5de5\u4f5c",id:"\u51c6\u5907\u5de5\u4f5c",children:[]},{value:"\u83b7\u53d6sample",id:"\u83b7\u53d6sample",children:[]},{value:"\u7ec4\u4ef6\u914d\u7f6e",id:"\u7ec4\u4ef6\u914d\u7f6e",children:[]},{value:"\u8bbe\u5907\u6811\u914d\u7f6e",id:"\u8bbe\u5907\u6811\u914d\u7f6e",children:[]},{value:"\u5e94\u7528\u5b9e\u73b0",id:"\u5e94\u7528\u5b9e\u73b0",children:[]},{value:"\u7f16\u8bd1\u70e7\u5f55",id:"\u7f16\u8bd1\u70e7\u5f55",children:[]}]}],o={toc:p};function u(t){let{components:n,...e}=t;return(0,l.kt)("wrapper",(0,a.Z)({},o,e,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u6587\u4ef6\u7cfb\u7edf\u7684\u4f7f\u7528"},"\u6587\u4ef6\u7cfb\u7edf\u7684\u4f7f\u7528"),(0,l.kt)("h2",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,l.kt)("p",null,"Zephyr SDK\u5f53\u524d\u652f\u6301\u4e24\u79cd\u6587\u4ef6\u7cfb\u7edf\uff0c\u5206\u522b\u662flittlefs\u548cfatfs\u3002\u9488\u5bf9\u5d4c\u5165\u5f0fRTOS\uff0c\u63a8\u8350\u4f7f\u7528littlefs\u6587\u4ef6\u7cfb\u7edf\u3002"),(0,l.kt)("p",null,"Zephyr\u63d0\u4f9b\u7684\u6587\u4ef6\u7cfb\u7edf\u529f\u80fd\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u5728\u4e0d\u540c\u7684\u6302\u8f7d\u70b9\uff08\u4f8b\u5982/lfs\u548c/fatfs\uff09\u6302\u8f7d\u591a\u4e2a\u6587\u4ef6\u7cfb\u7edf\uff08littlefs\u6216fatfs\uff09\uff0c\u6bcf\u4e2a\u6302\u8f7d\u70b9\u7ef4\u62a4\u6587\u4ef6\u7cfb\u7edf\u7684\u5b9e\u4f8b\u5316\u3001\u6302\u8f7d\u548c\u6587\u4ef6\u64cd\u4f5c\u7b49\u5fc5\u8981\u4fe1\u606f\u3002\n\u672c\u7ae0\u8282\u901a\u8fc7Zephyr SDK\u63d0\u4f9b\u7684\u793a\u4f8b",(0,l.kt)("inlineCode",{parentName:"p"},"littlefs"),"\u5c55\u793a\u5982\u4f55\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"lfs"),"\u6302\u8f7d\u70b9\u4e0a\u6302\u8f7d\u4e00\u4e2alittlefs\u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u5b9e\u73b0\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u3002"),(0,l.kt)("h2",{id:"\u5e38\u7528api\u63a5\u53e3"},"\u5e38\u7528API\u63a5\u53e3"),(0,l.kt)("h3",{id:"fs_statvfs"},"fs_statvfs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"cint fs_statvfs(const char *path, struct fs_statvfs *stat)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u68c0\u7d22\u6587\u4ef6\u7cfb\u7edf\u5377\u7684\u4fe1\u606f\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6302\u8f7d\u70b9\u8def\u5f84")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stat"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411\u63a5\u6536\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f\u7ed3\u6784\u4f53",(0,l.kt)("inlineCode",{parentName:"td"},"zfs_statvfs"),"\u7684\u6307\u9488\u3002")))),(0,l.kt)("h3",{id:"fs_stat"},"fs_stat"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int fs_stat(const char *path, struct fs_dirent *entry)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u68c0\u67e5\u6307\u5b9a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u72b6\u6001\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u8def\u5f84")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"entry"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5982\u679c\u6587\u4ef6\u6216\u76ee\u5f55\u5b58\u5728\uff0c\u5219\u6307\u5411\u8981\u586b\u5145\u7684",(0,l.kt)("inlineCode",{parentName:"td"},"zfs_dirent"),"\u7ed3\u6784\u7684\u6307\u9488\u3002")))),(0,l.kt)("h3",{id:"fs_open"},"fs_open"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int fs_open(struct fs_file_t *zfp, const char *file_name, fs_mode_t flags)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u6253\u5f00\u6216\u521b\u5efa\u6587\u4ef6\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"zfp"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411\u6587\u4ef6\u5bf9\u8c61\u7684\u6307\u9488")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"file_name"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8981\u6253\u5f00\u7684\u6587\u4ef6\u7684\u540d\u79f0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"flags"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6a21\u5f0f\u6807\u5fd7")))),(0,l.kt)("h3",{id:"fs_read"},"fs_read"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"ssize_t fs_read(struct fs_file_t *zfp, void *ptr, size_t size)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u8bfb\u6587\u4ef6\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"zfp"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411\u6587\u4ef6\u5bf9\u8c61\u7684\u6307\u9488")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ptr"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411\u6570\u636e\u7f13\u51b2\u533a\u7684\u6307\u9488")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8981\u8bfb\u53d6\u7684\u5b57\u8282\u6570")))),(0,l.kt)("h3",{id:"fs_write"},"fs_write"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"ssize_t fs_write(struct fs_file_t *zfp, const void *ptr, size_t size)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u5199\u6587\u4ef6\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"zfp"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411\u6587\u4ef6\u5bf9\u8c61\u7684\u6307\u9488")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ptr"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411\u6570\u636e\u7f13\u51b2\u533a\u7684\u6307\u9488")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8981\u5199\u5165\u7684\u5b57\u8282\u6570")))),(0,l.kt)("h3",{id:"fs_close"},"fs_close"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int fs_close(struct fs_file_t *zfp)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u5173\u95ed\u6587\u4ef6\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"zfp"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411\u6587\u4ef6\u5bf9\u8c61\u7684\u6307\u9488")))),(0,l.kt)("h3",{id:"fs_opendir"},"fs_opendir"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int fs_opendir(struct fs_dir_t *zdp, const char *path)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u6253\u5f00\u76ee\u5f55\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"zfp"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411\u76ee\u5f55\u5bf9\u8c61\u7684\u6307\u9488")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8981\u6253\u5f00\u7684\u76ee\u5f55\u7684\u8def\u5f84")))),(0,l.kt)("h3",{id:"fs_readdir"},"fs_readdir"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int fs_readdir(struct fs_dir_t *zdp, struct fs_dirent *entry)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u8bfb\u76ee\u5f55\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"zfp"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411\u76ee\u5f55\u5bf9\u8c61\u7684\u6307\u9488")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"entry"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411",(0,l.kt)("inlineCode",{parentName:"td"},"zfs_dirent"),"\u7ed3\u6784\u7684\u6307\u9488\uff0c\u7528\u4e8e\u8bfb\u53d6\u6761\u76ee")))),(0,l.kt)("h3",{id:"fs_closedir"},"fs_closedir"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int fs_closedir(struct fs_dir_t *zdp)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u5173\u95ed\u76ee\u5f55\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"zfp"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411\u76ee\u5f55\u5bf9\u8c61\u7684\u6307\u9488")))),(0,l.kt)("h3",{id:"fs_mount"},"fs_mount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int fs_mount(struct fs_mount_t *mp)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mp"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411",(0,l.kt)("inlineCode",{parentName:"td"},"fs_mount_t"),"\u7ed3\u6784\u4f53\u7684\u6307\u9488")))),(0,l.kt)("h3",{id:"fs_unmount"},"fs_unmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"int fs_unmount(struct fs_mount_t *mp)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u53e3\u8bf4\u660e\uff1a")),(0,l.kt)("p",null,"\u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53c2\u6570\u8bf4\u660e\uff1a")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mp"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5411",(0,l.kt)("inlineCode",{parentName:"td"},"fs_mount_t"),"\u7ed3\u6784\u4f53\u7684\u6307\u9488")))),(0,l.kt)("h2",{id:"\u4f7f\u7528\u793a\u4f8b"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("h3",{id:"\u51c6\u5907\u5de5\u4f5c"},"\u51c6\u5907\u5de5\u4f5c"),(0,l.kt)("p",null,"\u672c\u793a\u4f8b\u57fa\u4e8eCSK6-NanoKit\u5f00\u53d1\u677f\u5b9e\u73b0\uff0c\u9700\u8981\u505a\u4ee5\u4e0b\u51c6\u5907\u5de5\u4f5c\uff1a  "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"CSK6-NanoKit\u5f00\u53d1\u677f\uff1b")),(0,l.kt)("h3",{id:"\u83b7\u53d6sample"},"\u83b7\u53d6sample"),(0,l.kt)("p",null,"csk6 sdk\u63d0\u4f9b\u4e86",(0,l.kt)("inlineCode",{parentName:"p"},"littlefs"),"\u7684\u4f7f\u7528\u793a\u4f8b\uff0c\u53ef\u4ee5\u901a\u8fc7Lisa\u547d\u4ee4\u83b7\u53d6\u793a\u4f8b\u9879\u76ee\uff1a"),(0,l.kt)("p",null,"\u901a\u8fc7Lisa\u547d\u4ee4\u521b\u5efa\u9879\u76ee\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lisa zep create\n")),(0,l.kt)("p",null,"\u6309\u4ee5\u4e0b\u76ee\u5f55\u9009\u62e9\u5b8c\u6210sample\u521b\u5efa\uff1a  "),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"sample \u2192 boards \u2192 csk6 \u2192 subsys \u2192 fs \u2192 littlefs")),(0,l.kt)("h3",{id:"\u7ec4\u4ef6\u914d\u7f6e"},"\u7ec4\u4ef6\u914d\u7f6e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"CONFIG_MAIN_STACK_SIZE=8192\nCONFIG_DEBUG=y\nCONFIG_LOG=y\n# \u542f\u7528flash\nCONFIG_FLASH=y\nCONFIG_FLASH_MAP=y\nCONFIG_FLASH_PAGE_LAYOUT=y\n# \u542f\u52a8\u6587\u4ef6\u7cfb\u7edf\nCONFIG_FILE_SYSTEM=y\nCONFIG_FILE_SYSTEM_LITTLEFS=y\n")),(0,l.kt)("h3",{id:"\u8bbe\u5907\u6811\u914d\u7f6e"},"\u8bbe\u5907\u6811\u914d\u7f6e"),(0,l.kt)("p",null,"\u5728\u8bbe\u5907\u6811\u914d\u7f6e\u6587\u4ef6",(0,l.kt)("inlineCode",{parentName:"p"},"csk6002_9s_nano.overlay"),"\u4e2d\u914d\u7f6e\u6302\u8f7d\u70b9\u5e76\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u5728flash\u7684\u504f\u79fb\u5730\u5740\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'/delete-node/ &storage_partition;\n\n/ {\n    chosen {\n        /*\n         * shared memory reserved for the inter-processor communication\n         */\n        zephyr,flash_sysfs_storage = &filesystem_part;\n        zephyr,flash_controller = &flash;\n    };\n    \n    /* \u914d\u7f6e\u6302\u8f7d\u70b9/lfs1 */\n    fstab {\n        compatible = "zephyr,fstab";\n        lfs1: lfs1 {\n            compatible = "zephyr,fstab,littlefs";\n            mount-point = "/lfs1";\n            \n            /* \u6587\u4ef6\u7cfb\u7edf\u5bf9\u5e94\u7684flash partition*/\n            partition = <&filesystem_part>;\n            automount;\n            no-format;\n            read-size = <16>;\n            prog-size = <16>;\n            cache-size = <64>;\n            lookahead-size = <32>;\n            block-cycles = <512>;\n        };\n    };\n\n};\n\n\n&flash0 {\n    partitions {\n        compatible = "fixed-partitions";\n        #address-cells = <1>;\n        #size-cells = <1>;\n        \n        /* /lfs1\u5728 flash \u7684\u504f\u79fb\u5730\u57400x160000\uff0c\u7a7a\u95f4\u5927\u5c0f 0x00300000 */\n        filesystem_part: partition@160000 {\n            label = "filesystem";\n            reg = <0x160000 0x00300000>;\n        };\n    };\n};\n')),(0,l.kt)("h3",{id:"\u5e94\u7528\u5b9e\u73b0"},"\u5e94\u7528\u5b9e\u73b0"),(0,l.kt)("p",null,"\u6587\u4ef6\u7cfb\u7edf\u9700\u8981\u4ee5bin\u6587\u4ef6\u7684\u5f62\u5f0f\u70e7\u5f55\u5230flash\u5bf9\u5e94\u7684\u504f\u79fb\u5730\u5740\u4e0a\uff0c\u5e94\u7528\u9879\u76ee\u8fd0\u884c\u540e\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\u5e76\u5bf9\u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002"),(0,l.kt)("h4",{id:"\u6b65\u9aa4\u4e00\u521b\u5efalittlefs\u6587\u4ef6\u7cfb\u7edfbin\u6587\u4ef6"},"\u6b65\u9aa4\u4e00\uff1a\u521b\u5efalittlefs\u6587\u4ef6\u7cfb\u7edfbin\u6587\u4ef6"),(0,l.kt)("p",null,"\u521b\u5efa`",(0,l.kt)("inlineCode",{parentName:"p"},"\u6587\u4ef6\u7cfb\u7edfbin\u6587\u4ef6\u9700\u8981\u7528\u5230"),"mklittlefs`\u5de5\u5177\uff0c\u5e76\u5728Linux\u73af\u5883\u4e0b\u5b8c\u6210bin\u6587\u4ef6\u7684\u6253\u5305\u3002"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/earlephilhower/mklittlefs"},"mklittlefs\u5de5\u5177\u5305 \u4e0b\u8f7d\u8def\u5f84")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"mklittlefs"),"\u5b89\u88c5\u6b65\u9aa4\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"git clone ",(0,l.kt)("inlineCode",{parentName:"li"},"mklittlefs"),"\u5de5\u5177\u5305"),(0,l.kt)("li",{parentName:"ul"},"cd \u5230",(0,l.kt)("inlineCode",{parentName:"li"},"mklittlefs"),"\u5728Linux\u73af\u5883\u4e0b\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"$ git submodule update --init\n$ make dist\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u67e5\u770b\u5b89\u88c5\u662f\u5426\u6210\u529f")),(0,l.kt)("p",null,"\u5f53\u4f7f\u7528\u547d\u4ee4\u53ef\u4ee5\u770b\u5230\u7248\u672c\u540e\uff0c\u5219\u8868\u793a\u5b89\u88c5\u6210\u529f\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"$ mklittlefs --version\nversion: 0.2.3-6-g9a0e072\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u751f\u6210bin\u6587\u4ef6")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"./mklittlefs -c littlefs_image/ -d 0 -b 4096 -p 16 -s 2097152 littlefs_image.bin\n")),(0,l.kt)("p",null,"\u53c2\u6570\u8bf4\u660e:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"`littlefs_image/`-\u5f85\u6253\u5305\u5230 `littlefs_image.bin` \u7684\u6587\u4ef6\u5939\u3002\n\n-d <0-5>,  --debug <0-5>\ndebug\u7b49\u7ea7\uff0c 0 \u8868\u793a\u6ca1\u6709debug\u8f93\u51fa\u3002\n\n-b <number>,  --block <number>\n\u6587\u4ef6\u7cfb\u7edf\u7684\u5757\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002\n\n-p <number>,  --page <number>\n\u6587\u4ef6\u7cfb\u7edf\u7684\u9875\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002\n\n-s <number>,  --size <number>\n\u6587\u4ef6\u7cfb\u7edf\u955c\u50cfbin\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002\uff08\u6ce8\u610f\uff1a\u4e0d\u8981\u8d85\u8fc7dts\u7ed9\u6587\u4ef6\u7cfb\u7edfpartition\u5206\u914d\u7684flash\u7a7a\u95f4\uff09     \n")),(0,l.kt)("h4",{id:"\u6b65\u9aa4\u4e8c\u5e94\u7528\u5b9e\u73b0"},"\u6b65\u9aa4\u4e8c\uff1a\u5e94\u7528\u5b9e\u73b0"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\n#include <zephyr.h>\n#include <device.h>\n#include <fs/fs.h>\n#include <fs/littlefs.h>\n#include <storage/flash_map.h>\n\n/* \u5bf9\u4e8e LFS_NAME_MAX \u503c */\n#define MAX_PATH_LEN 255\n\n#define PARTITION_NODE DT_NODELABEL(lfs1)\n\n#if DT_NODE_EXISTS(PARTITION_NODE)\nFS_FSTAB_DECLARE_ENTRY(PARTITION_NODE);\n#else /* \u5206\u533a\u8282\u70b9 PARTITION_NODE */\nFS_LITTLEFS_DECLARE_DEFAULT_CONFIG(storage);\nstatic struct fs_mount_t lfs_storage_mnt = {\n    .type = FS_LITTLEFS,\n    .fs_data = &storage,\n    .storage_dev = (void *)FLASH_AREA_ID(storage),\n    .mnt_point = "/lfs",\n};\n#endif /* \u5206\u533a\u8282\u70b9 PARTITION_NODE */\n\nvoid main(void)\n{\n    struct fs_mount_t *mp =\n#if DT_NODE_EXISTS(PARTITION_NODE)\n        &FS_FSTAB_ENTRY(PARTITION_NODE)\n#else\n        &lfs_storage_mnt\n#endif\n        ;\n    unsigned int id = (uintptr_t)mp->storage_dev;\n    char fname[MAX_PATH_LEN];\n    struct fs_statvfs sbuf;\n    const struct flash_area *pfa;\n    int rc;\n    \n        /* \u6784\u5efa\u5f85\u64cd\u4f5c\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\uff08\u6587\u4ef6\u540d\u4e3aboot_count\uff09*/\n    snprintf(fname, sizeof(fname), "%s/boot_count", mp->mnt_point);\n    \n        /* \u4eceflash_ map\u4e2d\u68c0\u7d22flash\u5206\u533a\u3002 */\n    rc = flash_area_open(id, &pfa);\n    if (rc < 0) {\n        printk("FAIL: unable to find flash area %u: %d\\n",\n               id, rc);\n        return;\n    }\n\n    printk("Area %u at 0x%x on %s for %u bytes\\n",\n           id, (unsigned int)pfa->fa_off, pfa->fa_dev_name,\n           (unsigned int)pfa->fa_size);\n\n    /* \u53ef\u9009\u64e6\u9664flash\u5185\u5bb9 */\n    if (IS_ENABLED(CONFIG_APP_WIPE_STORAGE)) {\n        printk("Erasing flash area ... ");\n        rc = flash_area_erase(pfa, 0, pfa->fa_size);\n        printk("%d\\n", rc);\n    }\n\n    flash_area_close(pfa);\n\n    /* \u5982\u679c\u5df2\u542f\u7528\u81ea\u52a8\u6302\u8f7d\uff0c\u5219\u4e0d\u8981\u624b\u52a8\u6302\u8f7d */\n#if !DT_NODE_EXISTS(PARTITION_NODE) ||                      \\\n    !(FSTAB_ENTRY_DT_MOUNT_FLAGS(PARTITION_NODE) & FS_MOUNT_FLAG_AUTOMOUNT)\n    rc = fs_mount(mp);\n    if (rc < 0) {\n        printk("FAIL: mount id %" PRIuPTR " at %s: %d\\n",\n               (uintptr_t)mp->storage_dev, mp->mnt_point, rc);\n        return;\n    }\n    printk("%s mount: %d\\n", mp->mnt_point, rc);\n#else\n    printk("%s automounted\\n", mp->mnt_point);\n#endif\n    \n        /* \u68c0\u7d22\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f */\n    rc = fs_statvfs(mp->mnt_point, &sbuf);\n    if (rc < 0) {\n        printk("FAIL: statvfs: %d\\n", rc);\n        goto out;\n    }\n\n    printk("%s: bsize = %lu ; frsize = %lu ;"\n           " blocks = %lu ; bfree = %lu\\n",\n           mp->mnt_point,\n           sbuf.f_bsize, sbuf.f_frsize,\n           sbuf.f_blocks, sbuf.f_bfree);\n\n    struct fs_dirent dirent;\n    \n        /* \u83b7\u53d6boot_count\u6587\u4ef6\u72b6\u6001 */\n    rc = fs_stat(fname, &dirent);\n    printk("%s stat: %d\\n", fname, rc);\n    if (rc >= 0) {\n        printk("\\tfn \'%s\' size %zu\\n", dirent.name, dirent.size);\n    }\n\n    struct fs_file_t file;\n\n    fs_file_t_init(&file);\n    \n        /* \u6253\u5f00boot_count\u6587\u4ef6 */\n    rc = fs_open(&file, fname, FS_O_CREATE | FS_O_RDWR);\n    if (rc < 0) {\n        printk("FAIL: open %s: %d\\n", fname, rc);\n        goto out;\n    }\n\n    uint32_t boot_count = 0;\n\n    if (rc >= 0) {\n        /* \u8bfbboot_count\u6587\u4ef6\u5185\u5bb9 */\n        rc = fs_read(&file, &boot_count, sizeof(boot_count));\n        printk("%s read count %u: %d\\n", fname, boot_count, rc);\n        rc = fs_seek(&file, 0, FS_SEEK_SET);\n        printk("%s seek start: %d\\n", fname, rc);\n\n    }\n\n    boot_count += 1;\n        /* \u5199boot_count\u6587\u4ef6\uff0c\u5185\u5bb9\u4e3a\u8bfb\u53d6boot_count\u5185\u5bb9\u7684\u9012\u589e */\n    rc = fs_write(&file, &boot_count, sizeof(boot_count));\n    printk("%s write new boot count %u: %d\\n", fname,\n           boot_count, rc);\n    /* \u5173\u95edboot_count\u6587\u4ef6*/\n    rc = fs_close(&file);\n    printk("%s close: %d\\n", fname, rc);\n\n    struct fs_dir_t dir;\n\n    fs_dir_t_init(&dir);\n\n    rc = fs_opendir(&dir, mp->mnt_point);\n    printk("%s opendir: %d\\n", mp->mnt_point, rc);\n\n    while (rc >= 0) {\n        struct fs_dirent ent = { 0 };\n\n        rc = fs_readdir(&dir, &ent);\n        if (rc < 0) {\n            break;\n        }\n        if (ent.name[0] == 0) {\n            printk("End of files\\n");\n            break;\n        }\n        printk("  %c %zu %s\\n",\n               (ent.type == FS_DIR_ENTRY_FILE) ? \'F\' : \'D\',\n               ent.size,\n               ent.name);\n    }\n\n    (void)fs_closedir(&dir);\n\nout:\n        /* \u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf */\n    rc = fs_unmount(mp);\n    printk("%s unmount: %d\\n", mp->mnt_point, rc);\n}\n\n')),(0,l.kt)("h3",{id:"\u7f16\u8bd1\u70e7\u5f55"},"\u7f16\u8bd1\u70e7\u5f55"),(0,l.kt)("h4",{id:"\u7f16\u8bd1"},(0,l.kt)("strong",{parentName:"h4"},"\u7f16\u8bd1")),(0,l.kt)("p",null,"\u5728app\u6839\u76ee\u5f55\u4e0b\u901a\u8fc7\u4ee5\u4e0b\u6307\u4ee4\u5b8c\u6210\u7f16\u8bd1\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lisa zep build -b csk6002_9s_nano\n")),(0,l.kt)("h4",{id:"\u70e7\u5f55"},(0,l.kt)("strong",{parentName:"h4"},"\u70e7\u5f55")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u70e7\u5f55\u5e94\u7528\u9879\u76ee\u56fa\u4ef6")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"csk6002_9s_nano"),"\u5f00\u53d1\u677f\u901a\u8fc7USB\u8fde\u63a5PC\uff0c\u901a\u8fc7\u70e7\u5f55\u6307\u4ee4\u5f00\u59cb\u70e7\u5f55\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lisa zep flash --runner pyocd\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u70e7\u5f55",(0,l.kt)("inlineCode",{parentName:"li"},"littlefs_image.bin"),"\u6587\u4ef6")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'lisa zep flash --runner pyocd --flash-opt="--base-address=0x18160000" --bin-file C:\\Users\\xiaoqingqin\\Desktop\\littlefs_image.bin -d E:\\csk6\\littlefs\\build\n')),(0,l.kt)("p",null,"\u504f\u79fb\u5730\u5740\uff1a0x18160000"),(0,l.kt)("p",null,"littlefs\u5e94\u7528\u9879\u76eebuild\u8def\u5f84\uff1aE:\\csk6\\littlefs\\build(\u5f00\u53d1\u8005\u9700\u8981\u4fee\u6539\u4e3a\u5b9e\u9645\u7684\u8def\u5f84)"),(0,l.kt)("h4",{id:"\u67e5\u770b\u7ed3\u679c"},(0,l.kt)("strong",{parentName:"h4"},"\u67e5\u770b\u7ed3\u679c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"*** Booting Zephyr OS build v1.0.4-alpha.1  ***\nArea 0 at 0x160000 on FLASH_CTRL for 3145728 bytes\n/lfs1 automounted\n/lfs1: bsize = 16 ; frsize = 4096 ; blocks = 768 ; bfree = 766\n/lfs1/boot_count stat: 0\n    fn 'boot_count' size 4\n/lfs1/boot_count read count 2: 4\n/lfs1/boot_count seek start: 0\n/lfs1/boot_count write new boot count 3: 4\n/lfs1/boot_count close: 0\n/lfs1 opendir: 0\n  F 4 boot_count\nEnd of files\n/lfs1 unmount: 0\n[00:00:00.000,000] \x1b[0m<inf> littlefs: littlefs partition at /lfs1\x1b[0m\n[00:00:00.000,000] \x1b[0m<inf> littlefs: LittleFS version 2.2, disk version 2.0\x1b[0m\n[00:00:00.000,000] \x1b[0m<inf> littlefs: FS at FLASH_CTRL:0x160000 is 768 0x1000-byte blocks with 512 cycle\x1b[0m\n[00:00:00.000,000] \x1b[0m<inf> littlefs: sizes: rd 16 ; pr 16 ; ca 64 ; la 32\x1b[0m\n[00:00:00.001,000] \x1b[0m<inf> littlefs: /lfs1 mounted\x1b[0m\n[00:00:00.001,000] \x1b[0m<inf> littlefs: Automount /lfs1 succeeded\x1b[0m\n[00:00:00.039,000] \x1b[0m<inf> littlefs: /lfs1 unmounted\x1b[0m\n*** Booting Zephyr OS build v1.0.4-alpha.1  ***\nArea 0 at 0x160000 on FLASH_CTRL for 3145728 bytes\n/lfs1 automounted\n/lfs1: bsize = 16 ; frsize = 4096 ; blocks = 768 ; bfree = 766\n/lfs1/boot_count stat: 0\n    fn 'boot_count' size 4\n/lfs1/boot_count read count 3: 4\n/lfs1/boot_count seek start: 0\n/lfs1/boot_count write new boot count 4: 4\n/lfs1/boot_count close: 0\n/lfs1 opendir: 0\n  F 4 boot_count\nEnd of files\n/lfs1 unmount: 0\n[00:00:00.000,000] \x1b[0m<inf> littlefs: littlefs partition at /lfs1\x1b[0m\n[00:00:00.000,000] \x1b[0m<inf> littlefs: LittleFS version 2.2, disk version 2.0\x1b[0m\n[00:00:00.000,000] \x1b[0m<inf> littlefs: FS at FLASH_CTRL:0x160000 is 768 0x1000-byte blocks with 512 cycle\x1b[0m\n[00:00:00.000,000] \x1b[0m<inf> littlefs: sizes: rd 16 ; pr 16 ; ca 64 ; la 32\x1b[0m\n[00:00:00.001,000] \x1b[0m<inf> littlefs: /lfs1 mounted\x1b[0m\n[00:00:00.001,000] \x1b[0m<inf> littlefs: Automount /lfs1 succeeded\x1b[0m\n[00:00:00.039,000] \x1b[0m<inf> littlefs: /lfs1 unmounted\x1b[0m\n")))}u.isMDXComponent=!0}}]);